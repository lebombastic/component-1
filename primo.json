{"site":{"id":"192117ab-0bc1-43ad-8aac-51a7c10feb5e","name":"compnents","url":"compnents","code":{"js":"","css":"\n@import url(\"https://unpkg.com/@primo-app/primo@1.3.64/reset.css\");\n\n#page {\n  font-family: system-ui, sans-serif;\n  color: var(--color);\n  line-height: 1.6; \n  font-size: 1rem;\n  background: linear-gradient(to bottom, #159957, #155799); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n\n.section-container {\n  max-width: var(--max-width, 1000px);\n  margin: 0 auto;\n  padding: 3rem var(--padding, 1rem); \n}\n\n.heading {\n  font-size: 3rem;\n  line-height: 1;\n  font-weight: 700;\n  margin: 0;\n}\n\n.button {\n  color: white;\n  background: var(--color-accent);\n  border-radius: 5px;\n  padding: 8px 20px;\n  transition: var(--transition);\n\n  &:hover {\n    box-shadow: 0 0 10px 5px rgba(0, 0, 0, 0.1);\n  } \n\n  &.inverted {\n    background: transparent; \n    color: var(--color-accent); \n    border: 2px solid var(--color-accent);\n  }\n}\n","html":{"head":"<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> ","below":""}},"fields":[],"content":{"en":{}}},"pages":[{"id":"ed76ca0b-462e-43e6-a9c4-d2444112cf7e","url":"index","name":"Home","code":{"js":"","css":"","html":{"head":"","below":""}},"fields":[],"content":{"en":{}},"site":"192117ab-0bc1-43ad-8aac-51a7c10feb5e","parent":null}],"sections":[{"id":"777c266b-8f94-48f5-a2e0-4e2fe6f63647","content":{},"page":"ed76ca0b-462e-43e6-a9c4-d2444112cf7e","symbol":"30fbd6f1-17f5-456b-93c5-747fda488051","index":0}],"symbols":[{"id":"30fbd6f1-17f5-456b-93c5-747fda488051","name":"New Block","code":{"js":"import { onMount } from 'svelte';\n  \n  let selectedCategory = '';\n  let mainObjective = '';\n  let targetAudience = '';\n  let selectedTone = '';\n  let specificRequirements = '';\n  let outputFormat = '';\n  let generatedPrompt = '';\n  let isGenerating = false;\n  let isTestingAPI = false;\n  let testResult = '';\n  \n  // API Configuration\n  let apiProvider = 'openai';\n  let apiKey = '';\n  let apiModel = 'gpt-3.5-turbo';\n  let showApiConfig = false;\n\n\nconst apiLinks = {\n  openai: 'https://platform.openai.com/api-keys',\n  anthropic: 'https://console.anthropic.com/',\n  google: 'https://makersuite.google.com/app/apikey'\n};\n\n  const apiProviders = {\n    openai: {\n      name: 'OpenAI',\n      models: ['gpt-3.5-turbo', 'gpt-4', 'gpt-4-turbo'],\n      endpoint: 'https://api.openai.com/v1/chat/completions'\n    },\n    anthropic: {\n      name: 'Anthropic (Claude)',\n      models: ['claude-3-haiku-20240307', 'claude-3-sonnet-20240229', 'claude-3-opus-20240229'],\n      endpoint: 'https://api.anthropic.com/v1/messages'\n    },\n    google: {\n      name: 'Google (Gemini)',\n      models: ['gemini-2.5-flash', 'gemini-2.5-pro', 'gemini-pro'],\n      endpoint: 'https://generativelanguage.googleapis.com/v1beta/models'\n    }\n  };\n\n  const categories = {\n    'Business/Marketing': {\n      objectivePlaceholder: 'e.g., Create a marketing campaign for a new product launch',\n      audiencePlaceholder: 'e.g., Small business owners aged 30-50',\n      defaultTone: 'Professional',\n      defaultRequirements: 'Include call-to-action, focus on benefits, mention target metrics',\n      defaultFormat: 'Structured outline with bullet points and key messaging'\n    },\n    'Creative Writing': {\n      objectivePlaceholder: 'e.g., Write a short story about time travel',\n      audiencePlaceholder: 'e.g., Young adult readers interested in sci-fi',\n      defaultTone: 'Creative',\n      defaultRequirements: 'Include character development, engaging plot, vivid descriptions',\n      defaultFormat: 'Narrative format with dialogue and descriptive passages'\n    },\n    'Educational': {\n      objectivePlaceholder: 'e.g., Explain quantum physics concepts for beginners',\n      audiencePlaceholder: 'e.g., High school students with basic science knowledge',\n      defaultTone: 'Educational',\n      defaultRequirements: 'Use simple analogies, include examples, break down complex concepts',\n      defaultFormat: 'Step-by-step explanation with examples and key takeaways'\n    },\n    'General AI Assistant': {\n      objectivePlaceholder: 'e.g., Help plan a weekly meal prep routine',\n      audiencePlaceholder: 'e.g., Busy professionals looking for healthy options',\n      defaultTone: 'Helpful',\n      defaultRequirements: 'Provide practical advice, consider time constraints, include alternatives',\n      defaultFormat: 'Organized list with clear instructions and tips'\n    },\n    'Image Generation': {\n      objectivePlaceholder: 'e.g., Create a logo design for a tech startup',\n      audiencePlaceholder: 'e.g., Modern tech company targeting millennials',\n      defaultTone: 'Descriptive',\n      defaultRequirements: 'Specify style, colors, composition, mood, and visual elements',\n      defaultFormat: 'Detailed visual description with artistic direction'\n    },\n    'Technical/Coding': {\n      objectivePlaceholder: 'e.g., Write a Python function for data validation',\n      audiencePlaceholder: 'e.g., Junior developers learning backend development',\n      defaultTone: 'Technical',\n      defaultRequirements: 'Include error handling, comments, follow best practices',\n      defaultFormat: 'Code with documentation and usage examples'\n    },\n    'Video (VEO 3 AI)': {\n      objectivePlaceholder: 'e.g., Create a product demo video showing app features',\n      audiencePlaceholder: 'e.g., Potential customers evaluating software solutions',\n      defaultTone: 'Engaging',\n      defaultRequirements: 'Define scenes, characters, camera angles, transitions, duration',\n      defaultFormat: 'Scene-by-scene breakdown with visual and audio descriptions'\n    }\n  };\n\n  const toneOptions = ['Professional', 'Creative', 'Educational', 'Helpful', 'Descriptive', 'Technical', 'Engaging', 'Casual', 'Formal', 'Conversational'];\n\n  $: if (selectedCategory && categories[selectedCategory]) {\n    const categoryData = categories[selectedCategory];\n    selectedTone = categoryData.defaultTone;\n    specificRequirements = categoryData.defaultRequirements;\n    outputFormat = categoryData.defaultFormat;\n  }\n\n  $: availableModels = apiProviders[apiProvider]?.models || [];\n\n  $: if (apiProvider && !apiModel) {\n  if (apiProvider === 'google') {\n    apiModel = 'gemini-2.5-flash';\n  } else if (apiProvider === 'anthropic') {\n    apiModel = 'claude-3-haiku-20240307';\n  } else {\n    apiModel = 'gpt-3.5-turbo';\n  }\n}\n\nasync function testAPIConnection() {\n  if (!apiKey) {\n    testResult = 'Please enter an API key first';\n    return;\n  }\n\n  isTestingAPI = true;\n  testResult = '';\n\n  try {\n    const testPrompt = \"Say 'API connection successful' in a friendly way.\";\n    const response = await callAIAPI(\"You are a helpful assistant.\", testPrompt);\n    testResult = '✅ API connection successful!';\n  } catch (error) {\n    testResult = `❌ API test failed: ${error.message}`;\n  } finally {\n    isTestingAPI = false;\n  }\n}\n  async function generatePromptWithAI() {\n    if (!selectedCategory || !mainObjective) {\n      alert('Please fill in at least the category and main objective.');\n      return;\n    }\n\n    if (!apiKey) {\n      alert('Please enter your API key in the configuration.');\n      return;\n    }\n\n    isGenerating = true;\n    \n    try {\n      const systemPrompt = `You are an expert AI prompt engineer. Your task is to create a highly effective, detailed prompt based on the user's requirements. The prompt should be clear, specific, and optimized for getting the best results from AI models.\n\nCreate a professional AI prompt that incorporates all the provided details. Make the prompt actionable and specific. Format it as a single, well-structured prompt that can be directly used with AI models.`;\n\n      const userPrompt = `Create an AI prompt with these specifications:\n\nCategory: ${selectedCategory}\nMain Objective: ${mainObjective}\nTarget Audience: ${targetAudience || 'General audience'}\nTone: ${selectedTone || 'Professional'}\nRequirements: ${specificRequirements || 'Standard quality output'}\nOutput Format: ${outputFormat || 'Clear and organized response'}\n\nPlease generate a comprehensive, well-crafted AI prompt that incorporates all these elements effectively.`;\n\n      const response = await callAIAPI(systemPrompt, userPrompt);\n      generatedPrompt = response;\n    } catch (error) {\n      console.error('Error generating prompt:', error);\n      generatedPrompt = `Error generating prompt: ${error.message}. Please check your API configuration and try again.`;\n    } finally {\n      isGenerating = false;\n    }\n  }\n\n  async function callAIAPI(systemPrompt, userPrompt) {\n    switch (apiProvider) {\n      case 'openai':\n        return await callOpenAI(systemPrompt, userPrompt);\n      case 'anthropic':\n        return await callAnthropic(systemPrompt, userPrompt);\n      case 'google':\n        return await callGoogle(systemPrompt, userPrompt);\n      default:\n        throw new Error('Unsupported API provider');\n    }\n  }\n\n  async function callOpenAI(systemPrompt, userPrompt) {\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        model: apiModel,\n        messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: userPrompt }\n        ],\n        max_tokens: 1000,\n        temperature: 0.7\n      })\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error?.message || 'OpenAI API request failed');\n    }\n\n    const data = await response.json();\n    return data.choices[0].message.content;\n  }\n\n  async function callAnthropic(systemPrompt, userPrompt) {\n    const response = await fetch('https://api.anthropic.com/v1/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-key': apiKey,\n        'anthropic-version': '2023-06-01'\n      },\n      body: JSON.stringify({\n        model: apiModel,\n        max_tokens: 1000,\n        system: systemPrompt,\n        messages: [\n          { role: 'user', content: userPrompt }\n        ]\n      })\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error?.message || 'Anthropic API request failed');\n    }\n\n    const data = await response.json();\n    return data.content[0].text;\n  }\n\n  async function callGoogle(systemPrompt, userPrompt) {\n  const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/${apiModel}:generateContent?key=${apiKey}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      contents: [{\n        parts: [{\n          text: `${systemPrompt}\\n\\n${userPrompt}`\n        }]\n      }],\n      generationConfig: {\n        maxOutputTokens: 1000,\n        temperature: 0.7\n      }\n    })\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error?.message || 'Google API request failed');\n  }\n\n  const data = await response.json();\n  \n  // Better error handling for Google API response\n  if (!data.candidates || data.candidates.length === 0) {\n    throw new Error('No response generated from Google API');\n  }\n  \n  if (!data.candidates[0].content || !data.candidates[0].content.parts || data.candidates[0].content.parts.length === 0) {\n    throw new Error('Invalid response format from Google API');\n  }\n  \n  return data.candidates[0].content.parts[0].text;\n}\n\n  // Load API config from localStorage\n  onMount(() => {\n  const savedConfig = localStorage.getItem('aiPromptGeneratorConfig');\n  if (savedConfig) {\n    const config = JSON.parse(savedConfig);\n    apiProvider = config.apiProvider || 'openai';\n    apiKey = config.apiKey || '';\n    // Set default model based on provider\n    if (config.apiProvider === 'google') {\n      apiModel = config.apiModel || 'gemini-2.5-flash';\n    } else if (config.apiProvider === 'anthropic') {\n      apiModel = config.apiModel || 'claude-3-haiku-20240307';\n    } else {\n      apiModel = config.apiModel || 'gpt-3.5-turbo';\n    }\n  }\n});\n\n  // Save API config to localStorage\n  function saveConfig() {\n    const config = { apiProvider, apiKey, apiModel };\n    localStorage.setItem('aiPromptGeneratorConfig', JSON.stringify(config));\n    showApiConfig = false;\n  }","css":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n  \n  :global(body) {\n    font-family: 'Inter', sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #fafafa;\n    color: #1a1a1a;\n  }\n\n  .container {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 3rem;\n    max-width: 1400px;\n    margin: 0 auto;\n    padding: 2rem;\n    min-height: 100vh;\n  }\n\n  .form-section {\n    background: white;\n    border-radius: 16px;\n    padding: 2.5rem;\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n    height: fit-content;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    margin-bottom: 2rem;\n    position: relative;\n  }\n\n  .icon {\n    font-size: 1.5rem;\n  }\n\n  h1 {\n    font-size: 1.75rem;\n    font-weight: 600;\n    margin: 0;\n    color: #1a1a1a;\n    flex: 1;\n  }\n\n  .config-btn {\n    background: #f3f4f6;\n    border: none;\n    border-radius: 8px;\n    padding: 0.5rem;\n    cursor: pointer;\n    font-size: 1.2rem;\n    transition: background-color 0.2s ease;\n  }\n\n  .config-btn:hover {\n    background: #e5e7eb;\n  }\n\n  .api-config {\n    background: #f8fafc;\n    border: 1px solid #e2e8f0;\n    border-radius: 12px;\n    padding: 1.5rem;\n    margin-bottom: 2rem;\n  }\n\n  .api-config h3 {\n    margin: 0 0 1rem 0;\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: #374151;\n  }\n\n  .help-text {\n    display: block;\n    margin-top: 0.25rem;\n    font-size: 0.8rem;\n    color: #6b7280;\n  }\n\n  .config-actions {\n    display: flex;\n    gap: 0.75rem;\n    margin-top: 1rem;\n  }\n\n  .save-config-btn {\n    background: #10b981;\n    color: white;\n    border: none;\n    padding: 0.5rem 1rem;\n    border-radius: 6px;\n    font-size: 0.9rem;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n  }\n\n  .save-config-btn:hover {\n    background: #059669;\n  }\n\n  .cancel-btn {\n    background: #6b7280;\n    color: white;\n    border: none;\n    padding: 0.5rem 1rem;\n    border-radius: 6px;\n    font-size: 0.9rem;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n  }\n\n  .cancel-btn:hover {\n    background: #4b5563;\n  }\n\n  .form-group {\n    margin-bottom: 1.5rem;\n  }\n\n  label {\n    display: block;\n    font-weight: 500;\n    margin-bottom: 0.5rem;\n    color: #374151;\n    font-size: 0.95rem;\n  }\n\n  input, select, textarea {\n    width: 100%;\n    padding: 0.75rem;\n    border: 1.5px solid #e5e7eb;\n    border-radius: 8px;\n    font-size: 0.95rem;\n    font-family: 'Inter', sans-serif;\n    transition: border-color 0.2s ease, box-shadow 0.2s ease;\n    background: white;\n  }\n\n  input:focus, select:focus, textarea:focus {\n    outline: none;\n    border-color: #6366f1;\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n\n  input::placeholder, textarea::placeholder {\n    color: #9ca3af;\n  }\n\n  textarea {\n    resize: vertical;\n    min-height: 80px;\n  }\n\n  .generate-btn {\n    width: 100%;\n    background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);\n    color: white;\n    border: none;\n    padding: 1rem 1.5rem;\n    border-radius: 12px;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    transition: transform 0.2s ease, box-shadow 0.2s ease;\n    font-family: 'Inter', sans-serif;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n  }\n\n  .generate-btn:hover:not(:disabled) {\n    transform: translateY(-1px);\n    box-shadow: 0 8px 25px rgba(99, 102, 241, 0.3);\n  }\n\n  .generate-btn:active:not(:disabled) {\n    transform: translateY(0);\n  }\n\n  .generate-btn:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  .spinner {\n    width: 16px;\n    height: 16px;\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    border-top: 2px solid white;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  }\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n\n  .api-warning {\n    text-align: center;\n    color: #f59e0b;\n    font-size: 0.9rem;\n    margin-top: 1rem;\n    padding: 0.75rem;\n    background: #fef3c7;\n    border-radius: 8px;\n  }\n\n  .output-section {\n    background: white;\n    border-radius: 16px;\n    padding: 2.5rem;\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n    height: fit-content;\n  }\n\n  h2 {\n    font-size: 1.5rem;\n    font-weight: 600;\n    margin: 0 0 1.5rem 0;\n    color: #1a1a1a;\n  }\n\n  .output-content {\n    min-height: 200px;\n  }\n\n  .placeholder {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    padding: 3rem 1rem;\n    color: #6b7280;\n  }\n\n  .placeholder-icon {\n    font-size: 3rem;\n    margin-bottom: 1rem;\n    opacity: 0.5;\n  }\n\n  .placeholder p {\n    margin: 0;\n    font-size: 1rem;\n    line-height: 1.5;\n  }\n\n  .prompt-display {\n    background: #f8fafc;\n    border: 1px solid #e2e8f0;\n    border-radius: 12px;\n    overflow: hidden;\n  }\n\n  .prompt-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem 1.5rem;\n    background: #e2e8f0;\n    border-bottom: 1px solid #cbd5e1;\n  }\n\n  .prompt-label {\n    font-weight: 600;\n    color: #374151;\n    font-size: 0.9rem;\n  }\n\n  .copy-btn {\n    background: #6366f1;\n    color: white;\n    border: none;\n    padding: 0.4rem 0.8rem;\n    border-radius: 6px;\n    font-size: 0.8rem;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n  }\n\n  .copy-btn:hover {\n    background: #4f46e5;\n  }\n\n  .prompt-text {\n    padding: 1.5rem;\n    line-height: 1.6;\n    font-size: 0.95rem;\n    white-space: pre-wrap;\n    color: #1e293b;\n    font-weight: 500;\n  }\n\n.api-link {\n  margin-left: 0.5rem;\n  text-decoration: none;\n  font-size: 0.9rem;\n  opacity: 0.7;\n  transition: opacity 0.2s ease;\n}\n\n.api-link:hover {\n  opacity: 1;\n}\n\n.api-key-container {\n  display: flex;\n  gap: 0.5rem;\n  align-items: stretch;\n}\n\n.api-key-container input {\n  flex: 1;\n}\n\n.test-btn {\n  background: #f3f4f6;\n  border: 1.5px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 0.75rem;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 44px;\n}\n\n.test-btn:hover:not(:disabled) {\n  background: #e5e7eb;\n  border-color: #d1d5db;\n}\n\n.test-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.spinner-small {\n  width: 12px;\n  height: 12px;\n  border: 2px solid rgba(0, 0, 0, 0.1);\n  border-top: 2px solid #6366f1;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.test-result {\n  margin-top: 0.5rem;\n  padding: 0.5rem;\n  border-radius: 6px;\n  font-size: 0.85rem;\n  font-weight: 500;\n}\n\n.test-result.success {\n  background: #d1fae5;\n  color: #065f46;\n  border: 1px solid #a7f3d0;\n}\n\n.test-result.error {\n  background: #fee2e2;\n  color: #991b1b;\n  border: 1px solid #fca5a5;\n}\n\n  @media (max-width: 1024px) {\n    .container {\n      grid-template-columns: 1fr;\n      gap: 2rem;\n      padding: 1rem;\n    }\n  }\n\n  @media (max-width: 640px) {\n    .form-section, .output-section {\n      padding: 1.5rem;\n    }\n    \n    h1 {\n      font-size: 1.5rem;\n    }\n    \n    h2 {\n      font-size: 1.25rem;\n    }\n\n    .config-actions {\n      flex-direction: column;\n    }\n  }","html":"<main class=\"container\">\n  <div class=\"form-section\">\n    <div class=\"header\">\n      <div class=\"icon\">✨</div>\n      <h1>AI Prompt Generator</h1>\n      <button class=\"config-btn\" on:click={() => showApiConfig = !showApiConfig}>\n        ⚙️\n      </button>\n    </div>\n\n    {#if showApiConfig}\n      <div class=\"api-config\">\n        <h3>API Configuration</h3>\n        \n        <div class=\"form-group\">\n          <label for=\"apiProvider\">AI Provider</label>\n          <select id=\"apiProvider\" bind:value={apiProvider}>\n            {#each Object.entries(apiProviders) as [key, provider]}\n              <option value={key}>{provider.name}</option>\n            {/each}\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"apiModel\">Model</label>\n          <select id=\"apiModel\" bind:value={apiModel}>\n            {#each availableModels as model}\n              <option value={model}>{model}</option>\n            {/each}\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n  <label for=\"apiKey\">\n    API Key\n    <a \n      href={apiLinks[apiProvider]} \n      target=\"_blank\" \n      rel=\"noopener noreferrer\"\n      class=\"api-link\"\n      title=\"Get API key\"\n    >\n      🔗\n    </a>\n  </label>\n  <div class=\"api-key-container\">\n    <input \n      id=\"apiKey\"\n      type=\"password\" \n      bind:value={apiKey}\n      placeholder=\"Enter your API key...\"\n    />\n    <button \n      class=\"test-btn\"\n      on:click={testAPIConnection}\n      disabled={isTestingAPI || !apiKey}\n      title=\"Test API connection\"\n    >\n      {#if isTestingAPI}\n        <span class=\"spinner-small\"></span>\n      {:else}\n        🧪\n      {/if}\n    </button>\n  </div>\n  <small class=\"help-text\">Your API key is stored locally and never sent to our servers.</small>\n  {#if testResult}\n    <div class=\"test-result\" class:success={testResult.includes('✅')} class:error={testResult.includes('❌')}>\n      {testResult}\n    </div>\n  {/if}\n</div>\n\n        <div class=\"config-actions\">\n          <button class=\"save-config-btn\" on:click={saveConfig}>Save Configuration</button>\n          <button class=\"cancel-btn\" on:click={() => showApiConfig = false}>Cancel</button>\n        </div>\n      </div>\n    {/if}\n\n    <div class=\"form-group\">\n      <label for=\"category\">1. Select Category</label>\n      <select id=\"category\" bind:value={selectedCategory}>\n        <option value=\"\">Choose a category...</option>\n        {#each Object.keys(categories) as category}\n          <option value={category}>{category}</option>\n        {/each}\n      </select>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"objective\">2. What is your main objective?</label>\n      <input \n        id=\"objective\"\n        type=\"text\" \n        bind:value={mainObjective}\n        placeholder={selectedCategory ? categories[selectedCategory].objectivePlaceholder : 'e.g., Write a product description for a new smartwatch'}\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"audience\">3. Target audience or context</label>\n      <input \n        id=\"audience\"\n        type=\"text\" \n        bind:value={targetAudience}\n        placeholder={selectedCategory ? categories[selectedCategory].audiencePlaceholder : 'e.g., Tech-savvy consumers aged 25-40'}\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"tone\">4. Choose a tone</label>\n      <select id=\"tone\" bind:value={selectedTone}>\n        <option value=\"\">Select tone...</option>\n        {#each toneOptions as tone}\n          <option value={tone}>{tone}</option>\n        {/each}\n      </select>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"requirements\">5. Specific requirements or constraints</label>\n      <textarea \n        id=\"requirements\"\n        bind:value={specificRequirements}\n        placeholder=\"e.g., Include key features, mention price range, highlight durability\"\n        rows=\"3\"\n      ></textarea>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"format\">6. Preferred output format</label>\n      <input \n        id=\"format\"\n        type=\"text\" \n        bind:value={outputFormat}\n        placeholder=\"e.g., Bullet points, paragraph form, JSON structure\"\n      />\n    </div>\n\n    <button \n      class=\"generate-btn\" \n      on:click={generatePromptWithAI}\n      disabled={isGenerating || !apiKey}\n    >\n      {#if isGenerating}\n        <span class=\"spinner\"></span>\n        Generating...\n      {:else}\n        🤖 Generate AI Prompt\n      {/if}\n    </button>\n\n    {#if !apiKey}\n      <p class=\"api-warning\">⚠️ Please configure your API key to generate prompts</p>\n    {/if}\n  </div>\n\n  <div class=\"output-section\">\n    <h2>Generated AI Prompt</h2>\n    <div class=\"output-content\">\n      {#if generatedPrompt}\n        <div class=\"prompt-display\">\n          <div class=\"prompt-header\">\n            <span class=\"prompt-label\">Ready to use AI Prompt:</span>\n            <button class=\"copy-btn\" on:click={() => navigator.clipboard.writeText(generatedPrompt)}>\n              📋 Copy\n            </button>\n          </div>\n          <div class=\"prompt-text\">\n            {generatedPrompt}\n          </div>\n        </div>\n      {:else}\n        <div class=\"placeholder\">\n          <div class=\"placeholder-icon\">🤖</div>\n          <p>Configure your API settings and fill out the form to generate a custom AI prompt using real AI models.</p>\n        </div>\n      {/if}\n    </div>\n  </div>\n</main>"},"fields":[],"content":{"en":{}},"site":"192117ab-0bc1-43ad-8aac-51a7c10feb5e"},{"id":"e1ad5601-6ab1-445a-8300-5e2e1680b09a","name":"New Block","code":{"js":"","css":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap');\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: 'Inter', sans-serif;\n  background: linear-gradient(135deg, #23243a 0%, #3a2b47 100%);\n  min-height: 100vh;\n}\n\n.dashboard {\n  display: flex;\n  height: 100vh;\n}\n\n.sidebar {\n  width: 230px;\n  padding: 32px 0 0 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background: rgba(30, 32, 48, 0.6);\n  border-right: 1px solid rgba(255,255,255,0.08);\n  min-width: 200px;\n}\n\n.logo {\n  font-size: 2rem;\n  font-weight: bold;\n  color: #fff;\n  margin: 0 0 32px 32px;\n  letter-spacing: 2px;\n}\n\n.sidebar nav ul {\n  list-style: none;\n  padding: 0 0 0 32px;\n  margin: 0;\n  width: 100%;\n}\n\n.sidebar nav ul li {\n  color: #fff;\n  opacity: 0.8;\n  padding: 14px 0;\n  font-size: 1.08rem;\n  cursor: pointer;\n  transition: background 0.2s, opacity 0.2s;\n  border-radius: 8px;\n  padding-left: 16px;\n}\n\n.sidebar nav ul li.active,\n.sidebar nav ul li:hover {\n  background: rgba(255,255,255,0.10);\n  opacity: 1;\n}\n\n.main {\n  flex: 1;\n  padding: 40px 48px 32px 48px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  background: rgba(40, 45, 60, 0.35);\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header h1 {\n  color: #fff;\n  font-size: 2rem;\n  margin: 0;\n}\n\n.search {\n  background: rgba(255,255,255,0.12);\n  border: none;\n  border-radius: 12px;\n  padding: 10px 18px;\n  color: #fff;\n  font-size: 1rem;\n  outline: none;\n  width: 220px;\n  margin-left: 24px;\n  transition: background 0.2s;\n}\n\n.search:focus {\n  background: rgba(255,255,255,0.20);\n}\n\n.activity {\n  margin: 32px 0 0 0;\n}\n\n.activity-item {\n  background: rgba(255,255,255,0.08);\n  border-radius: 10px;\n  padding: 18px 24px;\n  color: #fff;\n  font-size: 1.1rem;\n  margin-bottom: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.03);\n}\n\n.resume, .movies {\n  margin-top: 32px;\n}\n\n.resume h2, .movies h2 {\n  color: #fff;\n  font-size: 1.3rem;\n  margin-bottom: 18px;\n}\n\n.media-row {\n  display: flex;\n  gap: 22px;\n}\n\n.media-card {\n  background: rgba(255,255,255,0.10);\n  border-radius: 16px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.07);\n  width: 140px;\n  height: 210px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.media-card img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 16px;\n}\n\n/* Glassmorphism effect */\n.glass {\n  backdrop-filter: blur(18px) saturate(160%);\n  -webkit-backdrop-filter: blur(18px) saturate(160%);\n  background: rgba(30, 32, 48, 0.35);\n  box-shadow: 0 4px 32px rgba(0,0,0,0.12);\n  border-radius: 16px;\n}","html":"  <div class=\"dashboard\">\n    <aside class=\"sidebar glass\">\n      <div class=\"logo\">Jellyfin</div>\n      <nav>\n        <ul>\n          <li class=\"active\">Dashboard</li>\n          <li>Libraries</li>\n          <li>Users</li>\n          <li>Plugins</li>\n          <li>Playback</li>\n          <li>Live TV & DVR</li>\n          <li>Settings</li>\n        </ul>\n      </nav>\n    </aside>\n    <main class=\"main glass\">\n      <header class=\"header\">\n        <h1>Activity</h1>\n        <input type=\"text\" class=\"search\" placeholder=\"Search\">\n      </header>\n      <section class=\"activity\">\n        <div class=\"activity-item\">\n          <strong>The Matrix</strong>\n        </div>\n      </section>\n      <section class=\"resume\">\n        <h2>Resume Playback</h2>\n        <div class=\"media-row\">\n          <div class=\"media-card\">\n            <img src=\"https://dummyimage.com/200x300/222/fff&text=STYAN+WORD\" alt=\"Resume Playback\">\n          </div>\n        </div>\n      </section>\n      <section class=\"movies\">\n        <h2>Movies</h2>\n        <div class=\"media-row\">\n          <div class=\"media-card\"><img src=\"https://dummyimage.com/200x300/abc/fff&text=Movie+1\" alt=\"Movie 1\"></div>\n          <div class=\"media-card\"><img src=\"https://dummyimage.com/200x300/222/ff6600&text=INCEPTION\" alt=\"Inception\"></div>\n          <div class=\"media-card\"><img src=\"https://dummyimage.com/200x300/333/fff&text=HATHER\" alt=\"Hather\"></div>\n          <div class=\"media-card\"><img src=\"https://dummyimage.com/200x300/ff6600/fff&text=Movie+4\" alt=\"Movie 4\"></div>\n        </div>\n      </section>\n    </main>\n  </div>"},"fields":[],"content":{"en":{}},"site":"192117ab-0bc1-43ad-8aac-51a7c10feb5e"},{"id":"4366e411-c8b9-4858-9655-843b722f55e1","name":"New Block","code":{"js":"import { onMount, onDestroy } from 'svelte';\n  \n  // Reactive state variables\n  let player;\n  let supabase;\n  let isPlayerReady = false;\n  let isPlaying = false;\n  let currentTime = 0;\n  let duration = 0;\n  let volume = 60;\n  let searchQuery = '';\n  let youtubeApiKey = '';\n  let playlist = [];\n  let searchResults = [];\n  let currentVideoId = '';\n  let currentTrackIndex = -1;\n  let currentTrackInfo = null;\n  let thumbnailUrl = '';\n  let displayedResults = 5;\n  let showApiKeyInput = false;\n  \n  // DOM element references\n  let progressBar;\n  let progressFill;\n  let volumeTrack;\n  let volumeFill;\n  let previousVolume = null;\n\n\n  function toggleMute() {\n  if (volume === 0) {\n    // If currently muted, restore to previous volume or default to 50%\n    setVolume(previousVolume || 50);\n  } else {\n    // Store current volume before muting\n    previousVolume = volume;\n    setVolume(0);\n  }\n}\n  // Load saved data on mount\n  onMount(async () => {\n\n  \ntry {\n  // Make sure the script is loaded first\n  if (!window.supabase) {\n    debug('Supabase not found in window object');\n    error = 'Supabase client not loaded. Please add the script tag to your HTML.';\n    return;\n  }\n  \n  const { createClient } = window.supabase;\n  supabase = createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY');\n  debug('Supabase client initialized');\n  \n  // Check for existing session\n  const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n  \n  if (sessionError) {\n    debug('Session error', sessionError);\n    error = sessionError.message;\n  } else if (session) {\n    user = session.user;\n    debug('User logged in', user.email);\n    \n    // Load API key\n    await loadApiKey();\n    \n    // Load user playlists\n    await loadUserPlaylists();\n  }\n} catch (e) {\n  debug('Supabase initialization error', e);\n  error = e.message;\n}\n    \n    // Load saved API key\n    const savedApiKey = localStorage.getItem('youtubeApiKey');\n    if (savedApiKey) {\n      youtubeApiKey = savedApiKey;\n    }\n    \n    // Load saved playlist\n    const savedPlaylist = localStorage.getItem('currentPlaylist');\n    if (savedPlaylist) {\n      try {\n        playlist = JSON.parse(savedPlaylist);\n      } catch (e) {\n        console.error('Error loading saved playlist:', e);\n      }\n    }\n    \n    // Load YouTube API\n    loadYouTubeAPI();\n    \n    // Set up interval for time updates\n    const timeUpdateInterval = setInterval(() => {\n      if (isPlaying && player && player.getCurrentTime && player.getDuration) {\n        currentTime = player.getCurrentTime();\n        duration = player.getDuration();\n      }\n    }, 1000);\n    \n    // Cleanup on destroy\n    return () => {\n      clearInterval(timeUpdateInterval);\n    };\n  });\n  \n  // Load YouTube API\n  async function loadYouTubeAPI() {\n    return new Promise((resolve, reject) => {\n      // Check if API is already loaded\n      if (window.YT && window.YT.Player) {\n        initializePlayer();\n        resolve();\n        return;\n      }\n      \n      // Create hidden player container if it doesn't exist\n      if (!document.getElementById('youtube-player')) {\n        const playerDiv = document.createElement('div');\n        playerDiv.id = 'youtube-player';\n        playerDiv.style.position = 'absolute';\n        playerDiv.style.top = '-9999px';\n        playerDiv.style.left = '-9999px';\n        document.body.appendChild(playerDiv);\n      }\n      \n      // Load the API\n      window.onYouTubeIframeAPIReady = () => {\n        initializePlayer();\n        resolve();\n      };\n      \n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.onerror = () => {\n        reject(new Error('Failed to load YouTube API'));\n      };\n      \n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    });\n  }\n  \n  // Initialize YouTube Player\n  function initializePlayer() {\n    console.log('Initializing YouTube player');\n    try {\n      player = new YT.Player('youtube-player', {\n        height: '0',\n        width: '0',\n        videoId: '',\n        playerVars: {\n          'playsinline': 1,\n          'controls': 0,\n          'disablekb': 1,\n          'rel': 0\n        },\n        events: {\n          'onReady': onPlayerReady,\n          'onStateChange': onPlayerStateChange,\n          'onError': onPlayerError\n        }\n      });\n    } catch (error) {\n      console.error('Error initializing YouTube player:', error);\n    }\n  }\n  \n  // Player Ready Event Handler\n  function onPlayerReady(event) {\n    console.log('YouTube player is ready');\n    isPlayerReady = true;\n    setVolume(volume);\n    \n    // Set up media session controls for modern browsers\n    if ('mediaSession' in navigator) {\n      navigator.mediaSession.setActionHandler('play', togglePlay);\n      navigator.mediaSession.setActionHandler('pause', togglePlay);\n      navigator.mediaSession.setActionHandler('nexttrack', playNextTrack);\n      navigator.mediaSession.setActionHandler('previoustrack', playPreviousTrack);\n    }\n  }\n  \n  // Player State Change Event Handler\n  function onPlayerStateChange(event) {\n    if (event.data === YT.PlayerState.PLAYING) {\n      isPlaying = true;\n      if ('mediaSession' in navigator) {\n        navigator.mediaSession.playbackState = 'playing';\n      }\n    } else if (event.data === YT.PlayerState.PAUSED) {\n      isPlaying = false;\n      if ('mediaSession' in navigator) {\n        navigator.mediaSession.playbackState = 'paused';\n      }\n    } else if (event.data === YT.PlayerState.ENDED) {\n      playNextTrack();\n    }\n  }\n  \n  // Player Error Event Handler\n  function onPlayerError(event) {\n    console.error('YouTube player error:', event.data);\n    isPlaying = false;\n    \n    // Try to recover by playing next track if possible\n    if (playlist.length > 0 && currentTrackIndex >= 0) {\n      playNextTrack();\n    }\n  }\n  \n  // Toggle Play/Pause\n  function togglePlay() {\n    if (!isPlayerReady) {\n      console.warn('Player not ready yet. Please wait...');\n      return;\n    }\n    \n    if (isPlaying) {\n      player.pauseVideo();\n    } else if (currentVideoId) {\n      player.playVideo();\n    } else if (playlist.length > 0) {\n      playVideo(playlist[0].videoId);\n    }\n  }\n  \n  // Play Video with ID\n  async function playVideo(videoId) {\n    if (!isPlayerReady) {\n      console.warn('Player not ready yet. Please wait...');\n      return;\n    }\n    \n    try {\n      await player.loadVideoById(videoId);\n      currentVideoId = videoId;\n      currentTrackIndex = playlist.findIndex(track => track.videoId === videoId);\n      \n      // Find track info\n      currentTrackInfo = playlist.find(track => track.videoId === videoId) || \n                        searchResults.find(result => result.videoId === videoId) || \n                        null;\n      \n      if (currentTrackInfo) {\n        thumbnailUrl = `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`;\n        \n        // Update media session metadata\n        if ('mediaSession' in navigator) {\n          navigator.mediaSession.metadata = new MediaMetadata({\n            title: currentTrackInfo.title || 'Unknown',\n            artist: currentTrackInfo.artist || 'Unknown',\n            artwork: [\n              {\n                src: thumbnailUrl,\n                sizes: '480x360',\n                type: 'image/jpeg'\n              }\n            ]\n          });\n        }\n      }\n      \n      isPlaying = true;\n    } catch (error) {\n      console.error('Error loading video:', error);\n    }\n  }\n  \n  // Play Next Track\n  function playNextTrack() {\n    if (playlist.length === 0) return;\n    \n    const nextIndex = (currentTrackIndex + 1) % playlist.length;\n    playVideo(playlist[nextIndex].videoId);\n  }\n  \n  // Play Previous Track\n  function playPreviousTrack() {\n    if (playlist.length === 0) return;\n    \n    const prevIndex = currentTrackIndex <= 0 ? playlist.length - 1 : currentTrackIndex - 1;\n    playVideo(playlist[prevIndex].videoId);\n  }\n  \n  // Set Volume\n  function setVolume(value) {\n    volume = Math.max(0, Math.min(100, value));\n    if (player && isPlayerReady) {\n      player.setVolume(volume);\n    }\n  }\n  \n  // Handle Progress Bar Click\n  function handleProgressBarClick(event) {\n    if (!isPlayerReady || !duration) return;\n    \n    const rect = progressBar.getBoundingClientRect();\n    const clickPosition = (event.clientX - rect.left) / rect.width;\n    const newTime = clickPosition * duration;\n    \n    player.seekTo(newTime, true);\n    currentTime = newTime;\n  }\n  \n  // Handle Volume Click\n  function handleVolumeClick(event) {\n    const rect = volumeTrack.getBoundingClientRect();\n    const clickPosition = (event.clientX - rect.left) / rect.width;\n    const newVolume = Math.round(clickPosition * 100);\n    \n    setVolume(newVolume);\n  }\n  \n  // Format Time (mm:ss)\n  function formatTime(seconds) {\n    if (!seconds) return '0:00';\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  }\n  \n  // Search YouTube\n  async function searchYouTube() {\n    if (!youtubeApiKey) {\n      alert('Please enter a YouTube API key first');\n      showApiKeyInput = true;\n      return;\n    }\n    \n    if (!searchQuery.trim()) {\n      alert('Please enter a search query');\n      return;\n    }\n    \n    try {\n      const response = await fetch(\n        `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(\n          searchQuery\n        )}&type=video&key=${youtubeApiKey}&maxResults=25`\n      );\n      \n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      \n      const data = await response.json();\n      searchResults = data.items.map(item => ({\n        title: item.snippet.title,\n        artist: item.snippet.channelTitle,\n        videoId: item.id.videoId,\n        thumbnail: item.snippet.thumbnails.default.url\n      }));\n      \n      // Show search results modal\n      showSearchResultsModal();\n    } catch (error) {\n      console.error('Error fetching YouTube data:', error);\n      alert('An error occurred while searching. Please try again.');\n      searchResults = [];\n    }\n  }\n  \n  // Show Search Results Modal\n  function showSearchResultsModal() {\n    // Create modal if it doesn't exist\n    let searchModal = document.getElementById('search-results-modal');\n    if (!searchModal) {\n      searchModal = document.createElement('div');\n      searchModal.id = 'search-results-modal';\n      searchModal.className = 'modal';\n      document.body.appendChild(searchModal);\n    }\n    \n    // Populate modal\n    searchModal.innerHTML = `\n      <div class=\"modal-content\">\n        <button class=\"modal-close\">×</button>\n        <h2>Search Results</h2>\n        <div class=\"search-results\">\n          ${searchResults.slice(0, displayedResults).map((result, index) => `\n            <div class=\"search-result-item\">\n              <div class=\"result-thumbnail\">\n                <img src=\"${result.thumbnail}\" alt=\"${result.title}\">\n              </div>\n              <div class=\"result-info\">\n                <div class=\"result-title\">${result.title}</div>\n                <div class=\"result-artist\">${result.artist}</div>\n              </div>\n              <div class=\"result-actions\">\n                <button class=\"result-play\" data-index=\"${index}\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M8 5V19L19 12L8 5Z\"/>\n                  </svg>\n                </button>\n                <button class=\"result-add\" data-index=\"${index}\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\n                  </svg>\n                </button>\n              </div>\n            </div>\n          `).join('')}\n        </div>\n        ${searchResults.length > displayedResults ? \n          `<button class=\"load-more-btn\">Load More</button>` : ''}\n      </div>\n    `;\n    \n    // Show modal\n    searchModal.style.display = 'flex';\n    \n    // Add event listeners\n    const closeBtn = searchModal.querySelector('.modal-close');\n    closeBtn.addEventListener('click', () => {\n      searchModal.style.display = 'none';\n    });\n    \n    const playBtns = searchModal.querySelectorAll('.result-play');\n    playBtns.forEach(btn => {\n      btn.addEventListener('click', () => {\n        const index = parseInt(btn.dataset.index);\n        playVideo(searchResults[index].videoId);\n        searchModal.style.display = 'none';\n      });\n    });\n    \n    const addBtns = searchModal.querySelectorAll('.result-add');\n    addBtns.forEach(btn => {\n      btn.addEventListener('click', () => {\n        const index = parseInt(btn.dataset.index);\n        addToPlaylist(searchResults[index]);\n      });\n    });\n    \n    const loadMoreBtn = searchModal.querySelector('.load-more-btn');\n    if (loadMoreBtn) {\n      loadMoreBtn.addEventListener('click', () => {\n        displayedResults += 5;\n        showSearchResultsModal();\n      });\n    }\n  }\n  \n  // Add to Playlist\n  function addToPlaylist(track) {\n    playlist = [...playlist, track];\n    \n    // Save to localStorage\n    localStorage.setItem('currentPlaylist', JSON.stringify(playlist));\n  }\n  \n  // Remove from Playlist\n  function removeFromPlaylist(index) {\n    const wasPlaying = currentTrackIndex === index && isPlaying;\n    \n    playlist = playlist.filter((_, i) => i !== index);\n    localStorage.setItem('currentPlaylist', JSON.stringify(playlist));\n    \n    if (index === currentTrackIndex) {\n      if (playlist.length > 0) {\n        const newIndex = Math.min(index, playlist.length - 1);\n        currentTrackIndex = newIndex;\n        playVideo(playlist[newIndex].videoId);\n      } else {\n        stopPlayback();\n      }\n    } else if (index < currentTrackIndex) {\n      currentTrackIndex--;\n    }\n  }\n  \n  // Stop Playback\n  function stopPlayback() {\n    if (player && isPlayerReady) {\n      player.stopVideo();\n    }\n    \n    currentTrackIndex = -1;\n    currentVideoId = '';\n    isPlaying = false;\n    currentTrackInfo = null;\n    \n    if ('mediaSession' in navigator) {\n      navigator.mediaSession.metadata = null;\n    }\n  }\n  \n  // Toggle API Key Input\n  function toggleApiKeyInput() {\n    showApiKeyInput = !showApiKeyInput;\n  }\n  \n  // Save API Key\n  async function saveApiKey() {\n  if (!user) {\n    debug('Cannot save API key - user not logged in');\n    alert('Please sign in to save your API key');\n    return;\n  }\n  \n  if (!apiKey) {\n    debug('Empty API key - not saving');\n    alert('Please enter a valid API key');\n    return;\n  }\n  \n  try {\n    debug('Saving API key');\n    \n    // Check if the api_keys table exists\n    const { error: tableCheckError } = await supabase\n      .from('api_keys')\n      .select('count')\n      .limit(1);\n    \n    if (tableCheckError) {\n      debug('Table check error - table might not exist', tableCheckError);\n      alert('Database error: api_keys table might not exist. Please check your Supabase setup.');\n      return;\n    }\n    \n    const { data, error } = await supabase\n      .from('api_keys')\n      .upsert({\n        user_id: user.id,\n        youtube_api_key: apiKey,\n        updated_at: new Date().toISOString()\n      }, {\n        onConflict: 'user_id'\n      });\n    \n    if (error) {\n      debug('API key save error', error);\n      alert('Failed to save API key: ' + error.message);\n      return;\n    }\n    \n    debug('API key saved successfully');\n    apiKeyStored = true;\n    initYouTubeAPI();\n    alert('API key saved successfully!');\n  } catch (e) {\n    debug('API key save exception', e);\n    alert('Exception saving API key: ' + e.message);\n  }\n}\n  \n  // Search Lyrics\n  function searchLyrics() {\n    if (!currentTrackInfo) {\n      alert('Please play a track first');\n      return;\n    }\n    \n    // Create lyrics modal\n    let lyricsModal = document.getElementById('lyrics-modal');\n    if (!lyricsModal) {\n      lyricsModal = document.createElement('div');\n      lyricsModal.id = 'lyrics-modal';\n      lyricsModal.className = 'modal';\n      document.body.appendChild(lyricsModal);\n    }\n    \n    // Populate modal\n    lyricsModal.innerHTML = `\n      <div class=\"modal-content\">\n        <button class=\"modal-close\">×</button>\n        <h2>Search Lyrics</h2>\n        <div class=\"lyrics-search\">\n          <input type=\"text\" class=\"lyrics-search-input\" value=\"${currentTrackInfo.title} ${currentTrackInfo.artist}\" placeholder=\"Search for lyrics...\">\n          <button class=\"lyrics-search-btn\">Search</button>\n        </div>\n        <div class=\"lyrics-results\">\n          <p>Enter a search query to find lyrics</p>\n        </div>\n      </div>\n    `;\n    \n    // Show modal\n    lyricsModal.style.display = 'flex';\n    \n    // Add event listeners\n    const closeBtn = lyricsModal.querySelector('.modal-close');\n    closeBtn.addEventListener('click', () => {\n      lyricsModal.style.display = 'none';\n    });\n    \n    const searchBtn = lyricsModal.querySelector('.lyrics-search-btn');\n    const searchInput = lyricsModal.querySelector('.lyrics-search-input');\n    \n    searchBtn.addEventListener('click', () => {\n      const query = searchInput.value.trim();\n      if (query) {\n        fetchLyrics(query, lyricsModal);\n      }\n    });\n    \n    searchInput.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        const query = searchInput.value.trim();\n        if (query) {\n          fetchLyrics(query, lyricsModal);\n        }\n      }\n    });\n  }\n  \n  // Fetch Lyrics\n  async function fetchLyrics(query, modal) {\n    const resultsContainer = modal.querySelector('.lyrics-results');\n    resultsContainer.innerHTML = '<p>Searching for lyrics...</p>';\n    \n    try {\n      const response = await fetch(`https://api.lyrics.ovh/suggest/${encodeURIComponent(query)}`);\n      if (!response.ok) throw new Error('Failed to search lyrics');\n      \n      const data = await response.json();\n      if (data.data && data.data.length > 0) {\n        resultsContainer.innerHTML = `\n          <div class=\"lyrics-results-list\">\n            ${data.data.slice(0, 5).map((item, index) => `\n              <div class=\"lyrics-result-item\">\n                <div class=\"lyrics-result-info\">\n                  <div class=\"lyrics-result-title\">${item.title}</div>\n                  <div class=\"lyrics-result-artist\">${item.artist.name}</div>\n                </div>\n                <button class=\"get-lyrics-btn\" data-title=\"${item.title}\" data-artist=\"${item.artist.name}\">\n                  Get Lyrics\n                </button>\n              </div>\n            `).join('')}\n          </div>\n        `;\n        \n        // Add event listeners to get lyrics buttons\n        const getLyricsBtns = resultsContainer.querySelectorAll('.get-lyrics-btn');\n        getLyricsBtns.forEach(btn => {\n          btn.addEventListener('click', () => {\n            const title = btn.dataset.title;\n            const artist = btn.dataset.artist;\n            getLyrics(title, artist, modal);\n          });\n        });\n      } else {\n        resultsContainer.innerHTML = '<p>No results found</p>';\n      }\n    } catch (error) {\n      console.error('Error searching lyrics:', error);\n      resultsContainer.innerHTML = '<p>Error searching for lyrics. Please try again.</p>';\n    }\n  }\n  \n  // Get Lyrics\n  async function getLyrics(title, artist, modal) {\n    const resultsContainer = modal.querySelector('.lyrics-results');\n    resultsContainer.innerHTML = '<p>Loading lyrics...</p>';\n    \n    try {\n      const response = await fetch(\n        `https://api.lyrics.ovh/v1/${encodeURIComponent(artist)}/${encodeURIComponent(title)}`\n      );\n      \n      if (!response.ok) throw new Error('Lyrics not found');\n      \n      const data = await response.json();\n      if (data.lyrics) {\n        resultsContainer.innerHTML = `\n          <div class=\"lyrics-content\">\n            <h3>${title} - ${artist}</h3>\n            <pre>${data.lyrics}</pre>\n          </div>\n        `;\n      } else {\n        resultsContainer.innerHTML = '<p>Lyrics not available for this song</p>';\n      }\n    } catch (error) {\n      console.error('Error fetching lyrics:', error);\n      resultsContainer.innerHTML = '<p>Could not retrieve lyrics. Please try another song.</p>';\n    }\n  }\n  \n  // Save Playlist\n  function savePlaylist() {\n    if (playlist.length === 0) {\n      alert('Your playlist is empty. Add some tracks first!');\n      return;\n    }\n    \n    const playlistName = prompt('Enter a name for your playlist:');\n    if (!playlistName) return;\n    \n    try {\n      const savedPlaylists = JSON.parse(localStorage.getItem('savedPlaylists') || '{}');\n      savedPlaylists[playlistName] = playlist;\n      localStorage.setItem('savedPlaylists', JSON.stringify(savedPlaylists));\n      alert(`Playlist \"${playlistName}\" saved successfully!`);\n    } catch (error) {\n      console.error('Error saving playlist:', error);\n      alert('Failed to save playlist. Please try again.');\n    }\n  }\n  \n  // Handle keyboard accessibility\n  function handleKeyDown(event, action) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      action();\n    }\n  }","css":"/* Base Styles */\n  :global(*) {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  :global(:root) {\n    --primary-bg: #1a1e2e;\n    --secondary-bg: #232741;\n    --accent-color: #7dd3fc;\n    --accent-hover: #38bdf8;\n    --text-primary: #ffffff;\n    --text-secondary: #94a3b8;\n    --card-bg: rgba(35, 39, 65, 0.8);\n    --border-radius: 16px;\n    --shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  }\n\n  :global(body) {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);\n    color: var(--text-primary);\n    min-height: 100vh;\n    overflow-x: hidden;\n  }\n\n  /* App Container */\n  .app {\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);\n    \n  }\n\n  /* Header */\n  .header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 1rem 2rem;\n    background: rgba(26, 30, 46, 0.9);\n    backdrop-filter: blur(10px);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .logo {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-size: 1.2rem;\n    font-weight: 600;\n  }\n\n  .logo-icon {\n    font-size: 1.5rem;\n  }\n\n  .search-container {\n    flex: 1;\n    max-width: 400px;\n    margin: 0 2rem;\n    position: relative;\n  }\n\n  .search-input {\n    width: 100%;\n    padding: 0.75rem 3rem 0.75rem 1rem;\n    background: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: 8px;\n    color: var(--text-primary);\n    font-size: 0.9rem;\n    outline: none;\n    transition: all 0.3s ease;\n  }\n\n  .search-input::placeholder {\n    color: var(--text-secondary);\n  }\n\n  .search-input:focus {\n    border-color: var(--accent-color);\n    background: rgba(255, 255, 255, 0.15);\n  }\n\n  .search-btn {\n    position: absolute;\n    right: 8px;\n    top: 50%;\n    transform: translateY(-50%);\n    background: none;\n    border: none;\n    color: var(--text-secondary);\n    cursor: pointer;\n    padding: 4px;\n    border-radius: 4px;\n    transition: all 0.2s ease;\n  }\n\n  .search-btn:hover {\n    color: var(--accent-color);\n    background: rgba(125, 211, 252, 0.1);\n  }\n\n  .api-section {\n    position: relative;\n  }\n\n  .api-key-btn {\n    padding: 0.75rem 1.5rem;\n    background: var(--accent-color);\n    color: var(--primary-bg);\n    border: none;\n    border-radius: 8px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.3s ease;\n  }\n\n  .api-key-btn:hover {\n    background: var(--accent-hover);\n    transform: translateY(-1px);\n  }\n\n  .api-input-container {\n    position: absolute;\n    top: 100%;\n    right: 0;\n    margin-top: 8px;\n    background: var(--card-bg);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n    padding: 1rem;\n    min-width: 280px;\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n    backdrop-filter: blur(10px);\n    box-shadow: var(--shadow);\n    z-index: 10;\n  }\n\n  .api-input {\n    flex: 1;\n    padding: 0.5rem 0.75rem;\n    background: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: 6px;\n    color: var(--text-primary);\n    font-size: 0.85rem;\n    outline: none;\n  }\n\n  .api-input::placeholder {\n    color: var(--text-secondary);\n  }\n\n  .api-save-btn {\n    padding: 0.5rem 1rem;\n    background: var(--accent-color);\n    color: var(--primary-bg);\n    border: none;\n    border-radius: 6px;\n    font-size: 0.85rem;\n    cursor: pointer;\n    transition: all 0.2s ease;\n  }\n\n  .api-save-btn:hover {\n    background: var(--accent-hover);\n  }\n\n  .api-cancel-btn {\n    width: 28px;\n    height: 28px;\n    background: rgba(255, 255, 255, 0.1);\n    border: none;\n    border-radius: 4px;\n    color: var(--text-secondary);\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.2s ease;\n  }\n\n  .api-cancel-btn:hover {\n    background: rgba(255, 255, 255, 0.2);\n    color: var(--text-primary);\n  }\n\n  /* Main Content */\n  .main-content {\n    flex: 1;\n    display: grid;\n    grid-template-columns: 1fr 350px;\n    gap: 2rem;\n    padding: 2rem;\n    max-width: 1400px;\n    margin: 0 auto;\n    width: 100%;\n  }\n\n  /* Player Section */\n  .player-section {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    gap: 2rem;\n  }\n\n  .album-artwork {\n    position: relative;\n  }\n\n  .artwork-container {\n    width: 280px;\n    height: 280px;\n    background: linear-gradient(135deg, #f3e8d2 0%, #e8d5b7 50%, #d4c2a8 100%);\n    border-radius: var(--border-radius);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: var(--shadow);\n    transition: transform 0.3s ease;\n  }\n\n  .artwork-container:hover {\n    transform: scale(1.05);\n  }\n\n  .artwork-image {\n    width: 120px;\n    height: 120px;\n    background: rgba(255, 255, 255, 0.9);\n    border-radius: 12px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n  }\n\n  .artwork-inner {\n    width: 80px;\n    height: 80px;\n    background: linear-gradient(135deg, #6b7280 0%, #4b5563 50%, #374151 100%);\n    border-radius: 8px;\n    position: relative;\n  }\n\n  .artwork-inner::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 40px;\n    height: 40px;\n    background: linear-gradient(135deg, #8b9dc3 0%, #6b7fa3 100%);\n    border-radius: 50%;\n  }\n\n  .track-info {\n    margin: 1rem 0;\n  }\n\n  .track-title {\n    font-size: 2rem;\n    font-weight: 600;\n    margin-bottom: 0.5rem;\n  }\n\n  .artist-name {\n    font-size: 1.1rem;\n    color: var(--text-secondary);\n  }\n\n  /* Player Controls */\n  .player-controls {\n    display: flex;\n    align-items: center;\n    gap: 1.5rem;\n    margin: 1rem 0;\n  }\n\n  .control-btn {\n    background: none;\n    border: none;\n    color: var(--accent-color);\n    cursor: pointer;\n    padding: 0.75rem;\n    border-radius: 50%;\n    transition: all 0.3s ease;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .control-btn:hover {\n    background: rgba(125, 211, 252, 0.1);\n    transform: scale(1.1);\n  }\n\n  .control-btn:focus {\n    outline: 2px solid var(--accent-color);\n    outline-offset: 2px;\n  }\n\n  .play-btn {\n    background: var(--accent-color);\n    color: var(--primary-bg);\n    width: 64px;\n    height: 64px;\n  }\n\n  .play-btn:hover {\n    background: var(--accent-hover);\n    transform: scale(1.1);\n  }\n\n  /* Progress Bar */\n  .progress-container {\n    width: 100%;\n    max-width: 400px;\n    margin: 1rem 0;\n  }\n\n  .time-display {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 0.5rem;\n    font-size: 0.8rem;\n    color: var(--text-secondary);\n  }\n\n  .progress-bar {\n    position: relative;\n    width: 100%;\n    height: 4px;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 2px;\n    cursor: pointer;\n  }\n\n  .progress-bar:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--accent-color);\n  }\n\n  .progress-fill {\n    width: 35%;\n    height: 100%;\n    background: var(--accent-color);\n    border-radius: 2px;\n    position: relative;\n  }\n\n  .progress-handle {\n    position: absolute;\n    right: -6px;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    background: var(--accent-color);\n    border-radius: 50%;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    opacity: 0;\n  }\n\n  .progress-bar:hover .progress-handle,\n  .progress-bar:focus .progress-handle {\n    opacity: 1;\n  }\n\n  /* Volume Control */\n  .volume-control {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  margin: 1rem 0;\n}\n\n.volume-button {\n  background: none;\n  border: none;\n  color: var(--text-secondary);\n  cursor: pointer;\n  padding: 0.5rem;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.volume-button:hover {\n  color: var(--accent-color);\n  background: rgba(125, 211, 252, 0.1);\n}\n\n.volume-slider-container {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n  width: 100px;\n}\n\n.volume-slider {\n  -webkit-appearance: none;\n  width: 100%;\n  height: 4px;\n  border-radius: 2px;\n  background: rgba(255, 255, 255, 0.1);\n  outline: none;\n}\n\n.volume-slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: var(--accent-color);\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.volume-slider::-moz-range-thumb {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: var(--accent-color);\n  cursor: pointer;\n  border: none;\n  transition: all 0.2s ease;\n}\n\n.volume-slider::-webkit-slider-thumb:hover,\n.volume-slider::-moz-range-thumb:hover {\n  transform: scale(1.2);\n}\n\n.volume-indicator {\n  font-size: 0.7rem;\n  color: var(--text-secondary);\n  text-align: right;\n}\n\n  /* Action Buttons */\n  .action-buttons {\n    display: flex;\n    gap: 1rem;\n    margin-top: 1rem;\n  }\n\n  .action-btn {\n    padding: 0.75rem 1.5rem;\n    border: none;\n    border-radius: 8px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.3s ease;\n  }\n\n  .action-btn:focus {\n    outline: 2px solid var(--accent-color);\n    outline-offset: 2px;\n  }\n\n  .action-btn.secondary {\n    background: rgba(255, 255, 255, 0.1);\n    color: var(--text-primary);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n\n  .action-btn.secondary:hover {\n    background: rgba(255, 255, 255, 0.2);\n  }\n\n  .action-btn.primary {\n    background: var(--accent-color);\n    color: var(--primary-bg);\n  }\n\n  .action-btn.primary:hover {\n    background: var(--accent-hover);\n    transform: translateY(-1px);\n  }\n\n  /* Playlist Section */\n  .playlist-section {\n    background: var(--card-bg);\n    border-radius: var(--border-radius);\n    padding: 1.5rem;\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    height: fit-content;\n  }\n\n  .playlist-title {\n    font-size: 1.3rem;\n    font-weight: 600;\n    margin-bottom: 1.5rem;\n    color: var(--text-primary);\n  }\n\n  .playlist-items {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n\n  .playlist-item {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    padding: 0.75rem;\n    border-radius: 8px;\n    transition: all 0.3s ease;\n    cursor: pointer;\n  }\n\n  .playlist-item:hover {\n    background: rgba(255, 255, 255, 0.05);\n  }\n\n  .playlist-item:focus {\n    outline: 2px solid var(--accent-color);\n    outline-offset: 2px;\n    background: rgba(255, 255, 255, 0.05);\n  }\n\n  .playlist-item.active {\n    background: rgba(125, 211, 252, 0.2);\n  }\n\n  .playlist-artwork {\n    width: 48px;\n    height: 48px;\n    border-radius: 8px;\n    overflow: hidden;\n    flex-shrink: 0;\n  }\n\n  .artwork-thumb {\n    width: 100%;\n    height: 100%;\n    border-radius: 8px;\n  }\n\n  .playlist-info {\n    flex: 1;\n    text-align: left;\n  }\n\n  .playlist-track {\n    font-weight: 500;\n    color: var(--text-primary);\n    margin-bottom: 0.25rem;\n  }\n\n  .playlist-artist {\n    font-size: 0.85rem;\n    color: var(--text-secondary);\n  }\n\n  .remove-btn {\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: rgba(255, 255, 255, 0.1);\n    border: none;\n    color: var(--text-secondary);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    font-size: 1.2rem;\n    transition: all 0.2s ease;\n  }\n\n  .remove-btn:hover {\n    background: rgba(255, 0, 0, 0.2);\n    color: #ff6b6b;\n  }\n\n  .remove-btn:focus {\n    outline: 2px solid var(--accent-color);\n    outline-offset: 2px;\n  }\n\n  .empty-playlist {\n    padding: 2rem 1rem;\n    text-align: center;\n    color: var(--text-secondary);\n    font-size: 0.9rem;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 8px;\n  }\n\n  /* Modal Styles */\n  :global(.modal) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.8);\n    display: none;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n    backdrop-filter: blur(10px);\n  }\n\n  :global(.modal-content) {\n    background: var(--card-bg);\n    border-radius: var(--border-radius);\n    padding: 2rem;\n    width: 90%;\n    max-width: 500px;\n    max-height: 80vh;\n    overflow-y: auto;\n    position: relative;\n    box-shadow: var(--shadow);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  :global(.modal-close) {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    background: rgba(255, 255, 255, 0.1);\n    border: none;\n    color: var(--text-secondary);\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    font-size: 1.2rem;\n    transition: all 0.2s ease;\n  }\n\n  :global(.modal-close:hover) {\n    background: rgba(255, 255, 255, 0.2);\n    color: var(--text-primary);\n  }\n\n  :global(.modal h2) {\n    font-size: 1.5rem;\n    margin-bottom: 1.5rem;\n    color: var(--text-primary);\n  }\n\n  /* Search Results */\n  :global(.search-results) {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n\n  :global(.search-result-item) {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    padding: 0.75rem;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 8px;\n    transition: all 0.2s ease;\n  }\n\n  :global(.search-result-item:hover) {\n    background: rgba(255, 255, 255, 0.1);\n  }\n\n  :global(.result-thumbnail) {\n    width: 48px;\n    height: 48px;\n    border-radius: 6px;\n    overflow: hidden;\n    flex-shrink: 0;\n  }\n\n  :global(.result-thumbnail img) {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  :global(.result-info) {\n    flex: 1;\n    overflow: hidden;\n  }\n\n  :global(.result-title) {\n    font-weight: 500;\n    color: var(--text-primary);\n    margin-bottom: 0.25rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  :global(.result-artist) {\n    font-size: 0.85rem;\n    color: var(--text-secondary);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  :global(.result-actions) {\n    display: flex;\n    gap: 0.5rem;\n  }\n\n  :global(.result-play), :global(.result-add) {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    border: none;\n  }\n\n  :global(.result-play) {\n    background: var(--accent-color);\n    color: var(--primary-bg);\n  }\n\n  :global(.result-play:hover) {\n    background: var(--accent-hover);\n    transform: scale(1.1);\n  }\n\n  :global(.result-add) {\n    background: rgba(255, 255, 255, 0.1);\n    color: var(--text-primary);\n  }\n\n  :global(.result-add:hover) {\n    background: rgba(255, 255, 255, 0.2);\n    transform: scale(1.1);\n  }\n\n  :global(.load-more-btn) {\n    width: 100%;\n    padding: 0.75rem;\n    margin-top: 1rem;\n    background: rgba(255, 255, 255, 0.1);\n    color: var(--text-primary);\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    font-weight: 500;\n  }\n\n  :global(.load-more-btn:hover) {\n    background: rgba(255, 255, 255, 0.2);\n  }\n\n  /* Lyrics Styles */\n  :global(.lyrics-search) {\n    display: flex;\n    gap: 0.5rem;\n    margin-bottom: 1.5rem;\n  }\n\n  :global(.lyrics-search-input) {\n    flex: 1;\n    padding: 0.75rem 1rem;\n    background: rgba(255, 255, 255, 0.1);\n    border: none;\n    border-radius: 8px;\n    color: var(--text-primary);\n    font-size: 0.9rem;\n  }\n\n  :global(.lyrics-search-input:focus) {\n    outline: none;\n    background: rgba(255, 255, 255, 0.15);\n  }\n\n  :global(.lyrics-search-btn) {\n    padding: 0.75rem 1.5rem;\n    background: var(--accent-color);\n    color: var(--primary-bg);\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    font-weight: 500;\n    transition: all 0.2s ease;\n  }\n\n  :global(.lyrics-search-btn:hover) {\n    background: var(--accent-hover);\n  }\n\n  /* Responsive Design */\n  @media (max-width: 1024px) {\n    .main-content {\n      grid-template-columns: 1fr;\n      gap: 2rem;\n    }\n    \n    .playlist-section {\n      order: -1;\n    }\n  }\n\n  @media (max-width: 768px) {\n    .header {\n      flex-direction: column;\n      gap: 1rem;\n      padding: 1rem;\n    }\n    \n    .search-container {\n      margin: 0;\n      max-width: none;\n    }\n    \n    .main-content {\n      padding: 1rem;\n    }\n    \n    .artwork-container {\n      width: 220px;\n      height: 220px;\n    }\n    \n    .player-controls {\n      gap: 1rem;\n    }\n    \n    .action-buttons {\n      flex-direction: column;\n      width: 100%;\n    }\n    \n    .volume-control {\n      flex-direction: column;\n      gap: 0.5rem;\n    }\n    \n    .volume-slider {\n      width: 120px;\n    }\n  }","html":"<div class=\"app\">\n  <!-- Header -->\n  <header class=\"header\">\n    <div class=\"logo\">\n      <span class=\"logo-icon\">🎵</span>\n      <span class=\"logo-text\">Harmony</span>\n    </div>\n    <div class=\"search-container\">\n      <input \n        type=\"text\" \n        placeholder=\"Search\" \n        class=\"search-input\"\n        bind:value={searchQuery}\n        on:keydown={(e) => e.key === 'Enter' && searchYouTube()}\n      >\n      <button class=\"search-btn\" on:click={searchYouTube}>\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n          <path d=\"m21 21-4.35-4.35\"></path>\n        </svg>\n      </button>\n    </div>\n    <div class=\"api-section\">\n      {#if !showApiKeyInput}\n        <button class=\"api-key-btn\" on:click={toggleApiKeyInput}>\n          {youtubeApiKey ? 'Change API Key' : 'Add Your API Key'}\n        </button>\n      {:else}\n        <div class=\"api-input-container\">\n          <input \n            type=\"text\" \n            placeholder=\"Enter API Key\" \n            class=\"api-input\"\n            bind:value={youtubeApiKey}\n            on:keydown={(e) => e.key === 'Enter' && saveApiKey()}\n          >\n          <button class=\"api-save-btn\" on:click={saveApiKey}>Save</button>\n          <button class=\"api-cancel-btn\" on:click={toggleApiKeyInput}>×</button>\n        </div>\n      {/if}\n    </div>\n  </header>\n\n  <!-- Main Content -->\n  <main class=\"main-content\">\n    <!-- Player Section -->\n    <section class=\"player-section\">\n      <div class=\"album-artwork\">\n        <div class=\"artwork-container\">\n          <div class=\"artwork-image\">\n            <div \n              class=\"artwork-inner\" \n              style={thumbnailUrl ? `background-image: url(${thumbnailUrl}); background-size: cover; background-position: center;` : ''}\n            ></div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"track-info\">\n        <h2 class=\"track-title\">{currentTrackInfo ? currentTrackInfo.title : 'Midnight Serenade'}</h2>\n        <p class=\"artist-name\">{currentTrackInfo ? currentTrackInfo.artist : 'Luna Beats'}</p>\n      </div>\n\n      <div class=\"player-controls\">\n        <button \n          class=\"control-btn\" \n          on:click={() => {/* Toggle shuffle */}}\n          on:keydown={(e) => handleKeyDown(e, () => {/* Toggle shuffle */})}\n          tabindex=\"0\"\n          aria-label=\"Shuffle\"\n        >\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M14.83 13.41L13.42 14.82L16.55 17.95L14.5 20H20V14.5L17.96 16.54L14.83 13.41M14.5 4L16.54 6.04L4 18.59L5.41 20L17.96 7.46L20 9.5V4M10.59 9.17L5.41 4L4 5.41L9.17 10.58L10.59 9.17Z\"/>\n          </svg>\n        </button>\n        \n        <button \n          class=\"control-btn\" \n          on:click={playPreviousTrack}\n          on:keydown={(e) => handleKeyDown(e, playPreviousTrack)}\n          tabindex=\"0\"\n          aria-label=\"Previous track\"\n        >\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M6 6H4V18H6V6M9.5 12L18 6V18L9.5 12Z\"/>\n          </svg>\n        </button>\n        \n        <button \n          class=\"control-btn play-btn\" \n          on:click={togglePlay}\n          on:keydown={(e) => handleKeyDown(e, togglePlay)}\n          tabindex=\"0\"\n          aria-label={isPlaying ? \"Pause\" : \"Play\"}\n        >\n          {#if isPlaying}\n            <svg width=\"28\" height=\"28\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\"/>\n            </svg>\n          {:else}\n            <svg width=\"28\" height=\"28\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M8 5V19L19 12L8 5Z\"/>\n            </svg>\n          {/if}\n        </button>\n        \n        <button \n          class=\"control-btn\" \n          on:click={playNextTrack}\n          on:keydown={(e) => handleKeyDown(e, playNextTrack)}\n          tabindex=\"0\"\n          aria-label=\"Next track\"\n        >\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M16 18H18V6H16V18M6 18L14.5 12L6 6V18Z\"/>\n          </svg>\n        </button>\n        \n        <button \n          class=\"control-btn\" \n          on:click={() => {/* Toggle repeat */}}\n          on:keydown={(e) => handleKeyDown(e, () => {/* Toggle repeat */})}\n          tabindex=\"0\"\n          aria-label=\"Repeat\"\n        >\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M17 17H7V14L3 18L7 22V19H19V13H17M7 7H17V10L21 6L17 2V5H5V11H7V7Z\"/>\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"progress-container\">\n        <div class=\"time-display\">\n          <span class=\"current-time\">{formatTime(currentTime)}</span>\n          <span class=\"total-time\">{formatTime(duration)}</span>\n        </div>\n        <div \n          class=\"progress-bar\" \n          bind:this={progressBar}\n          on:click={handleProgressBarClick}\n          tabindex=\"0\"\n          role=\"slider\"\n          aria-label=\"Playback position\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n          aria-valuenow={duration ? (currentTime / duration) * 100 : 0}\n          on:keydown={(e) => {\n            if (e.key === 'ArrowRight') {\n              e.preventDefault();\n              player.seekTo(Math.min(currentTime + 5, duration), true);\n            } else if (e.key === 'ArrowLeft') {\n              e.preventDefault();\n              player.seekTo(Math.max(currentTime - 5, 0), true);\n            }\n          }}\n        >\n          <div \n            class=\"progress-fill\" \n            bind:this={progressFill}\n            style={`width: ${duration ? (currentTime / duration) * 100 : 0}%`}\n          ></div>\n          <div \n            class=\"progress-handle\"\n            style={`left: ${duration ? (currentTime / duration) * 100 : 0}%`}\n          ></div>\n        </div>\n      </div>\n\n      <div class=\"volume-control\">\n  <button \n    class=\"volume-button\" \n    on:click={toggleMute} \n    aria-label=\"Toggle mute\"\n  >\n    {#if volume === 0}\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"volume-icon\">\n        <polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon>\n        <line x1=\"23\" y1=\"9\" x2=\"17\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"></line>\n        <line x1=\"17\" y1=\"9\" x2=\"23\" y2=\"15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"></line>\n      </svg>\n    {:else if volume < 50}\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"volume-icon\">\n        <polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon>\n        <path d=\"M15.54 8.46a5 5 0 0 1 0 7.07\"></path>\n      </svg>\n    {:else}\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"volume-icon\">\n        <polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon>\n        <path d=\"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07\"></path>\n      </svg>\n    {/if}\n  </button>\n  \n  <div class=\"volume-slider-container\">\n    <input\n      type=\"range\"\n      min=\"0\"\n      max=\"100\"\n      bind:value={volume}\n      on:input={() => setVolume(volume)}\n      class=\"volume-slider\"\n      aria-label=\"Volume control\"\n    />\n    <div class=\"volume-indicator\">{volume}%</div>\n  </div>\n</div>\n\n      <div class=\"action-buttons\">\n        <button \n          class=\"action-btn secondary\" \n          on:click={searchLyrics}\n          tabindex=\"0\"\n        >\n          Search Lyrics\n        </button>\n        <button \n          class=\"action-btn primary\" \n          on:click={savePlaylist}\n          tabindex=\"0\"\n        >\n          Save Playlist\n        </button>\n      </div>\n    </section>\n\n    <!-- Playlist Section -->\n    <aside class=\"playlist-section\">\n      <h3 class=\"playlist-title\">Playlist</h3>\n      <div class=\"playlist-items\">\n        {#each playlist as track, index}\n          <div \n            class=\"playlist-item {currentTrackIndex === index ? 'active' : ''}\" \n            on:click={() => playVideo(track.videoId)}\n            on:keydown={(e) => handleKeyDown(e, () => playVideo(track.videoId))}\n            tabindex=\"0\"\n            role=\"button\"\n            aria-label=\"Play {track.title}\"\n          >\n            <div class=\"playlist-artwork\">\n              <div \n                class=\"artwork-thumb\" \n                style={`background-image: url(https://img.youtube.com/vi/${track.videoId}/default.jpg); background-size: cover;`}\n              ></div>\n            </div>\n            <div class=\"playlist-info\">\n              <div class=\"playlist-track\">{track.title}</div>\n              <div class=\"playlist-artist\">{track.artist}</div>\n            </div>\n            <button \n              class=\"remove-btn\" \n              on:click|stopPropagation={() => removeFromPlaylist(index)}\n              on:keydown|stopPropagation={(e) => handleKeyDown(e, () => removeFromPlaylist(index))}\n              tabindex=\"0\"\n              aria-label=\"Remove from playlist\"\n            >×</button>\n          </div>\n        {:else}\n          <!-- If playlist is empty -->\n          <div class=\"empty-playlist\">\n            <p>Your playlist is empty. Search for songs to add them here.</p>\n          </div>\n        {/each}\n      </div>\n    </aside>\n  </main>\n                         <div id=\"youtube-player\"></div>\n</div>"},"fields":[],"content":{"en":{}},"site":"192117ab-0bc1-43ad-8aac-51a7c10feb5e"},{"id":"f65b41be-d240-4726-972f-023cd8b2da19","name":"Music pLayer","code":{"js":"import { onMount } from 'svelte';\n  import {\n    Search,\n    X,\n    MoreVertical,\n    SkipBack,\n    SkipForward,\n    Play,\n    Pause,\n    Key,\n    Volume2,\n    Settings,\n    List,\n    Plus,\n    FileText,\n    Trash2,\n    VolumeX,\n    Volume1,\n  } from 'lucide-svelte';\n\n  // State variables\n  let player;\n  let currentTime = 0;\n  let duration = 0;\n  let isPlaying = false;\n  let searchQuery = '';\n  let showSearchModal = false;\n  let showApiKeyModal = false;\n  let searchResults = [];\n  let displayedResults = 5;\n  let playlist = [];\n  let currentVideoId = '';\n  let isSearching = false;\n  let youtubeApiKey = '';\n  let showPlaylist = false;\n  let volume = 50;\n  let isPlayerReady = false;\n  let currentTrackIndex = -1;\n  let currentTrackInfo = null;\n  let manualSearchQuery = { title: '', artist: '' };\n  let lyrics = null;\n  let errorMessage = null;\n  let lyricsSearchQuery = '';\n  let lyricsSearchResults = [];\n  let isSearchingLyrics = false;\n  let selectedLyrics = null;\n  let lyricsError = null;\n  let playerError = null;\n  let isInitializing = true;\n  let showVolumeSlider = false;\n  let showSettings = false;\n  let showVolume = true;\n  let showLyricsModal = false;\n  let showLyricsSearch = false;\n  let isPlaylistVisible = false;\n  let showLyrics = false;\n  let thumbnailUrl = defaultImage;\n\n  //Settings icon method\n  function toggleSettings() {\n    showSettings = !showSettings;\n  }\n\n  function toggleVolume() {\n    showVolume = !showVolume;\n  }\n\n  // Initialize YouTube Player\n  onMount(() => {\n    tryInitialize();\n  });\n\n  async function tryInitialize() {\n    let retries = 0;\n    const maxRetries = 3;\n\n    async function attemptInitialization() {\n      try {\n        await loadYouTubeAPI();\n        isInitializing = false;\n      } catch (error) {\n        console.error('Error loading YouTube API or initializing player:', error);\n        playerError =\n          'Failed to initialize YouTube player. Please check your internet connection or try again later.';\n\n        if (retries < maxRetries) {\n          retries++;\n          console.log(`Retrying initialization (attempt ${retries}/${maxRetries})...`);\n          setTimeout(attemptInitialization, 2000);\n        } else {\n          console.error('Max retries reached. Unable to initialize YouTube player.');\n          isInitializing = false;\n          playerError = 'Unable to initialize YouTube player after multiple attempts.';\n        }\n      }\n    }\n    await attemptInitialization();\n  }\n\n  // Load YouTube API\n  function loadYouTubeAPI() {\n    return new Promise((resolve, reject) => {\n      if (window.YT && window.YT.Player) {\n        initializePlayer();\n        resolve();\n      }\n\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      tag.onload = () => {\n        window.onYouTubeIframeAPIReady = () => {\n          initializePlayer();\n          resolve();\n        };\n      };\n      tag.onerror = () => {\n        reject(new Error('Failed to load YouTube API'));\n      };\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    });\n  }\n\n  // Initialize Player\n  function initializePlayer() {\n    console.log('Initializing YouTube player');\n    try {\n      player = new YT.Player('youtube-player', {\n        height: '0',\n        width: '0',\n        videoId: '',\n        events: {\n          onReady: (event) => {\n            console.log('YouTube player is ready');\n            isPlayerReady = true;\n            setVolume(volume);\n            isInitializing = false; // Clear isInitializing flag here!\n          },\n          onStateChange: onPlayerStateChange,\n          onError: onPlayerError,\n        },\n      });\n    } catch (error) {\n      console.error('Error initializing YouTube player:', error);\n    }\n  }\n\n  // Handle Player Ready\n  function onPlayerReady(event) {\n    console.log('YouTube player is ready');\n    isPlayerReady = true;\n    setVolume(volume);\n\n    if ('mediaSession' in navigator) {\n      navigator.mediaSession.setActionHandler('play', () => togglePlay());\n      navigator.mediaSession.setActionHandler('pause', () => togglePlay());\n      navigator.mediaSession.setActionHandler('nexttrack', () => playNextTrack());\n      navigator.mediaSession.setActionHandler('previoustrack', () => playPreviousTrack());\n    }\n  }\n\n  // Handle Player State Change\n  function onPlayerStateChange(event) {\n    if (event.data === YT.PlayerState.PLAYING) {\n      isPlaying = true;\n      if ('mediaSession' in navigator) {\n        navigator.mediaSession.playbackState = 'playing';\n      }\n      updateTimeInfo();\n    } else if (event.data === YT.PlayerState.PAUSED) {\n      isPlaying = false;\n      if ('mediaSession' in navigator) {\n        navigator.mediaSession.playbackState = 'paused';\n      }\n    } else if (event.data === YT.PlayerState.ENDED) {\n      playNextTrack();\n    }\n  }\n\n  function onPlayerError(event) {\n    console.log('YouTube player error:', event.data);\n    isPlaying = false;\n  }\n\n  function updateTimeInfo() {\n    if (player && player.getCurrentTime && player.getDuration) {\n      currentTime = player.getCurrentTime();\n      duration = player.getDuration();\n      if (isPlaying) {\n        setTimeout(updateTimeInfo, 1000);\n      }\n    }\n  }\n\n  async function searchYouTube() {\n    if (!youtubeApiKey) {\n      alert('Please enter a YouTube API key first');\n      showApiKeyModal = true;\n      return;\n    }\n    if (!searchQuery.trim()) {\n      alert('Please enter a search query');\n      return;\n    }\n    isSearching = true;\n    try {\n      const response = await fetch(\n        `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(\n          searchQuery\n        )}&type=video&key=${youtubeApiKey}&maxResults=25`\n      );\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      searchResults = data.items.map((item) => ({\n        title: item.snippet.title,\n        artist: item.snippet.channelTitle,\n        videoId: item.id.videoId,\n      }));\n    } catch (error) {\n      console.error('Error fetching YouTube data:', error);\n      alert('An error occurred while searching. Please try again.');\n      searchResults = [];\n    } finally {\n      isSearching = false;\n    }\n  }\n\n  function loadMore() {\n    displayedResults += 5;\n  }\n\n  function addToPlaylist(track) {\n    playlist = [...playlist, track];\n  }\n\n  function removeFromPlaylist(index) {\n    playlist = playlist.filter((_, i) => i !== index);\n\n    if (index === currentTrackIndex) {\n      if (playlist.length > 0) {\n        playVideo(playlist[0].videoId);\n      } else {\n        stopPlayback();\n      }\n    } else if (index < currentTrackIndex) {\n      currentTrackIndex--;\n    }\n  }\n\n  function stopPlayback() {\n    currentTrackIndex = -1;\n    currentVideoId = '';\n    isPlaying = false;\n    if (player && player.stopVideo) player.stopVideo();\n    currentTrackInfo = null;\n\n    if ('mediaSession' in navigator) {\n      navigator.mediaSession.metadata = null;\n    }\n  }\n\n  async function playVideo(videoId) {\n    if (isInitializing) {\n      console.log('YouTube player is still initializing. Please wait.');\n      return;\n    }\n    if (!isPlayerReady || !player || !player.loadVideoById) {\n      console.error('YouTube player is not fully initialized. Please wait.');\n      return;\n    }\n\n    try {\n      await player.loadVideoById(videoId);\n      currentVideoId = videoId;\n      currentTrackIndex = playlist.findIndex((track) => track.videoId === videoId);\n\n      currentTrackInfo =\n        playlist.find((track) => track.videoId === videoId) ||\n        searchResults.find((result) => result.videoId === videoId) ||\n        null;\n\n      if (currentTrackInfo) {\n        console.log('Current track info updated:', currentTrackInfo);\n        thumbnailUrl = `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`;\n\n        if ('mediaSession' in navigator) {\n          navigator.mediaSession.metadata = new MediaMetadata({\n            title: currentTrackInfo.title || 'Unknown',\n            artist: currentTrackInfo.artist || 'Unknown',\n            artwork: [\n              {\n                src: thumbnailUrl,\n                sizes: '480x360',\n                type: 'image/jpeg',\n              },\n            ],\n          });\n        }\n      } else {\n        console.warn('Could not find track info for videoId:', videoId);\n      }\n\n      isPlaying = true;\n      updateTimeInfo(); // Start updating time info\n    } catch (error) {\n      console.error(`Error loading video: ${error.message}. Please try again.`);\n      isPlaying = false;\n    }\n  }\n\n  function togglePlay() {\n    if (!player) return;\n    if (isPlaying) {\n      player.pauseVideo();\n      isPlaying = false;\n    } else if (currentVideoId) {\n      player.playVideo();\n      isPlaying = true;\n    } else if (playlist.length > 0) {\n      playVideo(playlist[0].videoId);\n    }\n  }\n\n  function formatTime(seconds) {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  }\n\n  let previousVolume = null;\n  function setVolume(value) {\n    volume = value;\n    if (player && player.setVolume) {\n      player.setVolume(volume);\n      \n      // Update media session if available\n      if ('mediaSession' in navigator) {\n        // Some browsers support volume control via media session\n        // This is just a placeholder as the actual implementation varies\n      }\n    }\n  }\n\n  function playNextTrack() {\n    if (playlist.length === 0) return;\n    let nextIndex = (currentTrackIndex + 1) % playlist.length;\n    playVideo(playlist[nextIndex].videoId);\n  }\n\n  function playPreviousTrack() {\n    if (playlist.length === 0) return;\n    let prevIndex = currentTrackIndex === 0 ? playlist.length - 1 : currentTrackIndex - 1;\n    playVideo(playlist[prevIndex].videoId);\n  }\n\n  function setApiKey() {\n    if (youtubeApiKey.trim()) {\n      showApiKeyModal = false;\n    } else {\n      alert('Please enter a valid API key');\n    }\n  }\n\n  function handleSearchClick() {\n    showSearchModal = true;\n  }\n\n  function handleApiKeyClick() {\n    showApiKeyModal = true;\n  }\n\n  async function searchLyrics() {\n    if (!lyricsSearchQuery.trim()) {\n      alert('Please enter a search query');\n      return;\n    }\n    isSearchingLyrics = true;\n    lyricsError = null;\n    lyricsSearchResults = [];\n    selectedLyrics = null;\n\n    try {\n      const response = await fetch(\n        `https://api.lyrics.ovh/suggest/${encodeURIComponent(lyricsSearchQuery)}`\n      );\n      if (!response.ok) throw new Error('Failed to search lyrics');\n      const data = await response.json();\n      lyricsSearchResults = data.data\n        .slice(0, 5)\n        .map((item) => ({\n          title: item.title,\n          artist: item.artist.name,\n          id: item.id,\n        }));\n    } catch (error) {\n      lyricsError = 'Failed to search for lyrics. Please try again.';\n    } finally {\n      isSearchingLyrics = false;\n    }\n  }\n\n  async function getLyrics(title, artist) {\n    lyricsError = null;\n    selectedLyrics = null;\n\n    try {\n      const response = await fetch(\n        `https://api.lyrics.ovh/v1/${encodeURIComponent(artist)}/${encodeURIComponent(title)}`\n      );\n      if (!response.ok) throw new Error('Lyrics not found');\n      const data = await response.json();\n      selectedLyrics = data.lyrics || 'Lyrics not available';\n      showLyricsModal = true;\n    } catch (error) {\n      lyricsError = 'Could not retrieve lyrics. Please try another song.';\n    }\n  }\n\n  function handleLyricsSearch() {\n    searchLyrics();\n  }\n\n  const closeModal = () => {\n    showLyricsModal = false;\n  }\n\n  const defaultImage = 'https://picsum.photos/id/237/300/300';\n\n  function handleLyricsClick() {\n    showLyricsSearch = !showLyricsSearch;\n  }\n\n  function handleSearchYouTubeClick() {\n    showSearchModal = true;\n  }\n\n  function handleApiKeyModalClick() {\n    showApiKeyModal = true;\n  }\n\n  function togglePlaylist() {\n    isPlaylistVisible = !isPlaylistVisible;\n  }\n\n  function toggleLyrics() {\n    showLyrics = !showLyrics;\n  }\n\n  function handleProgressKeydown(event) {\n  if (!player || !player.getDuration) return;\n  \n  // Handle keyboard navigation\n  if (event.key === 'ArrowLeft') {\n    const newTime = Math.max(0, currentTime - 5); // Back 5 seconds\n    player.seekTo(newTime, true);\n    currentTime = newTime;\n    event.preventDefault();\n  } else if (event.key === 'ArrowRight') {\n    const newTime = Math.min(duration, currentTime + 5); // Forward 5 seconds\n    player.seekTo(newTime, true);\n    currentTime = newTime;\n    event.preventDefault();\n  } else if (event.key === 'Enter' || event.key === ' ') {\n    // Toggle play/pause on Enter or Space\n    togglePlay();\n    event.preventDefault();\n  }\n}\n\n  function handleProgressBarClick(event) {\n  if (!player || !player.getDuration) return;\n  \n  const progressBar = event.currentTarget;\n  const rect = progressBar.getBoundingClientRect();\n  const clickPosition = (event.clientX - rect.left) / rect.width;\n  const newTime = clickPosition * duration;\n  \n  player.seekTo(newTime, true);\n  currentTime = newTime;\n}\n\nfunction toggleMute() {\n  if (volume === 0) {\n    // Restore to previous volume or default to 50\n    setVolume(previousVolume || 50);\n  } else {\n    // Store current volume and mute\n    previousVolume = volume;\n    setVolume(0);\n  }\n}\n  // Corrected: Prevent the modals from showing initially\n    // function handleSearchClick() {\n    //     showSearchModal = true;\n    // }\n\n    // function handleApiKeyClick() {\n    //     showApiKeyModal = true;\n    // }","css":"/* Color Palette - Updated */\n:root {\n  --primary-color: #1ed4bc; /* Mint green accent color */\n  --primary-hover: #19b8a3;\n  --background-color: #121212; /* Dark background */\n  --card-background: #1e1e1e; /* Slightly lighter than background */\n  --text-primary: #ffffff;\n  --text-secondary: #b3b3b3;\n  --border-radius: 12px;\n  --shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n}\n\n/* General Layout Updates */\n.player-container {\n  min-height: 100vh;\n  background: var(--background-color);\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  color: var(--text-primary);\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\n/* Header Section */\n.header-section {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.header-content {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo-title {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.logo {\n  font-size: 1.8rem;\n  color: var(--primary-color);\n}\n\n.header-content h1 {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: var(--text-primary);\n  margin: 0;\n}\n\n/* Search Bar */\n.search-input {\n  position: relative;\n  width: 300px;\n}\n\n.search-icon {\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: var(--text-secondary);\n}\n\n.search-input input {\n  width: 100%;\n  padding: 0.75rem 1rem 0.75rem 2.5rem;\n  background-color: rgba(255, 255, 255, 0.1);\n  border: none;\n  border-radius: 20px;\n  color: var(--text-primary);\n  font-size: 0.9rem;\n}\n\n.search-input input:focus {\n  outline: none;\n  background-color: rgba(255, 255, 255, 0.15);\n}\n\n.search-input input::placeholder {\n  color: var(--text-secondary);\n}\n\n/* API Key Button */\n.add-api-key-btn {\n  background-color: var(--primary-color);\n  color: #121212;\n  font-weight: 600;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: background-color 0.2s, transform 0.1s;\n}\n\n.add-api-key-btn:hover {\n  background-color: var(--primary-hover);\n}\n\n.add-api-key-btn:active {\n  transform: scale(0.98);\n}\n\n/* Player Layout */\n.player-layout {\n  display: flex;\n  gap: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n/* Album Art and Player */\n.player-section {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.album-art {\n  width: 300px;\n  height: 300px;\n  margin-bottom: 2rem;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  transition: transform 0.3s ease;\n}\n\n.album-art:hover {\n  transform: scale(1.02);\n}\n\n.album-art img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n/* Track Info */\n.track-info {\n  text-align: center;\n  margin-bottom: 1.5rem;\n  width: 100%;\n  max-width: 400px;\n}\n\n.track-info .title {\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n  color: var(--text-primary);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.artist-album {\n  font-size: 1rem;\n  color: var(--text-secondary);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n/* Progress Bar */\n.time-progress {\n  width: 100%;\n  max-width: 400px;\n  margin: 1rem 0;\n  position: relative;\n}\n\n.progress-container {\n  height: 4px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 2px;\n  margin: 0.5rem 0;\n  position: relative;\n  cursor: pointer;\n  transition: height 0.2s;\n}\n\n.progress-container:hover {\n  height: 6px;\n}\n\n.progress-container:hover .progress-bar {\n  background: var(--primary-hover);\n}\n\n.progress-bar {\n  height: 100%;\n  background: var(--primary-color);\n  border-radius: 2px;\n  transition: width 0.1s linear;\n}\n\n.time-display {\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.8rem;\n  color: var(--text-secondary);\n  margin-top: 0.25rem;\n}\n\n/* Controls */\n.controls {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 2rem;\n  margin: 1.5rem 0;\n}\n\n.control-btn {\n  color: var(--text-primary);\n  background: none;\n  border: none;\n  cursor: pointer;\n  transition: transform 0.2s, color 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.control-btn:hover {\n  transform: scale(1.1);\n  color: var(--primary-color);\n}\n\n.control-btn:active {\n  transform: scale(0.95);\n}\n\n.play-btn {\n  background-color: var(--primary-color);\n  color: #121212;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: background-color 0.2s, transform 0.2s;\n}\n\n.play-btn:hover {\n  background-color: var(--primary-hover);\n  transform: scale(1.05);\n}\n\n.play-btn:active {\n  transform: scale(0.98);\n}\n\n/* Volume Control */\n.volume-control {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-top: 1rem;\n}\n\n.volume-button {\n  background: none;\n  border: none;\n  color: var(--text-secondary);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.volume-slider {\n  -webkit-appearance: none;\n  width: 100px;\n  height: 4px;\n  border-radius: 2px;\n  background: rgba(255, 255, 255, 0.1);\n  outline: none;\n  transition: opacity 0.2s;\n}\n\n.volume-slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: var(--primary-color);\n  cursor: pointer;\n  transition: transform 0.1s;\n}\n\n.volume-slider::-webkit-slider-thumb:hover {\n  transform: scale(1.2);\n}\n\n.volume-slider::-moz-range-thumb {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: var(--primary-color);\n  cursor: pointer;\n  border: none;\n  transition: transform 0.1s;\n}\n\n.volume-slider::-moz-range-thumb:hover {\n  transform: scale(1.2);\n}\n\n/* Playlist Section */\n.playlist-section {\n  width: 300px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: var(--border-radius);\n  padding: 1.5rem;\n  height: fit-content;\n}\n\n.playlist-section h2 {\n  font-size: 1.2rem;\n  margin-bottom: 1rem;\n  color: var(--text-primary);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.playlist-card {\n  max-height: 400px;\n  overflow-y: auto;\n  margin-bottom: 1rem;\n}\n\n.playlist-card::-webkit-scrollbar {\n  width: 6px;\n}\n\n.playlist-card::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 3px;\n}\n\n.playlist-card::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 3px;\n}\n\n.playlist-card::-webkit-scrollbar-thumb:hover {\n  background: rgba(255, 255, 255, 0.3);\n}\n\n.playlist-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.playlist-item {\n  padding: 0.75rem;\n  border-radius: 8px;\n  margin-bottom: 0.5rem;\n  transition: background-color 0.2s;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.playlist-item:hover {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.playlist-item.active {\n  background-color: rgba(30, 212, 188, 0.2);\n}\n\n.playlist-item-info {\n  flex: 1;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.playlist-item-title {\n  color: var(--text-primary);\n  font-weight: 500;\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  font-size: 0.9rem;\n}\n\n.track-artist {\n  color: var(--text-secondary);\n  font-size: 0.8rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.remove-from-playlist {\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: var(--text-secondary);\n  opacity: 0.6;\n  transition: opacity 0.2s, color 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.25rem;\n}\n\n.remove-from-playlist:hover {\n  opacity: 1;\n  color: #ff5555;\n}\n\n/* Add to playlist button */\n.add-to-playlist {\n  background-color: transparent;\n  border: 1px solid var(--primary-color);\n  color: var(--primary-color);\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  margin: 0 auto;\n  transition: background-color 0.2s, transform 0.1s;\n}\n\n.add-to-playlist:hover {\n  background-color: rgba(30, 212, 188, 0.1);\n  transform: scale(1.05);\n}\n\n.add-to-playlist:active {\n  transform: scale(0.95);\n}\n\n/* Bottom Action Buttons */\n.action-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 2rem;\n  width: 100%;\n  max-width: 400px;\n}\n\n.action-btn {\n  padding: 0.75rem 1.5rem;\n  border-radius: 20px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s, transform 0.1s;\n  flex: 1;\n  text-align: center;\n}\n\n.search-lyrics-btn {\n  background-color: rgba(255, 255, 255, 0.1);\n  color: var(--text-primary);\n  border: none;\n}\n\n.search-lyrics-btn:hover {\n  background-color: rgba(255, 255, 255, 0.15);\n}\n\n.save-playlist-btn {\n  background-color: var(--primary-color);\n  color: #121212;\n  border: none;\n}\n\n.save-playlist-btn:hover {\n  background-color: var(--primary-hover);\n}\n\n.action-btn:active {\n  transform: scale(0.98);\n}\n\n/* Volume indicator */\n.volume-indicator {\n  position: absolute;\n  right: 0;\n  bottom: -20px;\n  color: var(--text-secondary);\n  font-size: 0.8rem;\n}\n\n/* Modal Styling */\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  z-index: 1000;\n  backdrop-filter: blur(5px);\n}\n\n.modal-content {\n  background: var(--card-background);\n  border-radius: var(--border-radius);\n  padding: 2rem;\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);\n}\n\n.modal-close {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: var(--text-secondary);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: color 0.2s;\n}\n\n.modal-close:hover {\n  color: var(--text-primary);\n}\n\n.modal h2 {\n  font-size: 1.5rem;\n  margin-bottom: 1.5rem;\n  color: var(--text-primary);\n}\n\n.search-input,\n.api-key-input {\n  display: flex;\n  gap: 0.5rem;\n  margin-bottom: 1.5rem;\n}\n\n.search-input input,\n.api-key-input input {\n  flex: 1;\n  padding: 0.75rem 1rem;\n  background-color: rgba(255, 255, 255, 0.1);\n  border: none;\n  border-radius: 8px;\n  color: var(--text-primary);\n  font-size: 0.9rem;\n}\n\n.search-input input:focus,\n.api-key-input input:focus {\n  outline: none;\n  background-color: rgba(255, 255, 255, 0.15);\n}\n\n.search-input button,\n.api-key-input button {\n  padding: 0.75rem 1.5rem;\n  background: var(--primary-color);\n  color: #121212;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: background-color 0.2s;\n}\n\n.search-input button:hover,\n.api-key-input button:hover {\n  background: var(--primary-hover);\n}\n\n/* Search Results */\n.search-results {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  margin-top: 1rem;\n}\n\n.search-result-item {\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 0.75rem 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  transition: background-color 0.2s;\n}\n\n.search-result-item:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.search-result-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.search-result-item span {\n  display: block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: var(--text-primary);\n  font-weight: 500;\n  font-size: 0.9rem;\n}\n\n.search-result-item .artist {\n  font-size: 0.8rem;\n  color: var(--text-secondary);\n  margin-top: 0.25rem;\n}\n\n.search-result-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.load-more {\n  background: none;\n  border: 1px solid var(--primary-color);\n  color: var(--primary-color);\n  padding: 0.75rem;\n  border-radius: 8px;\n  cursor: pointer;\n  margin-top: 1rem;\n  width: 100%;\n  transition: background-color 0.2s;\n  font-weight: 500;\n}\n\n.load-more:hover {\n  background-color: rgba(30, 212, 188, 0.1);\n}\n\n/* Lyrics Section */\n.lyrics-section {\n  margin-top: 1rem;\n  width: 100%;\n  max-width: 400px;\n}\n\n.lyrics-toggle {\n  width: 100%;\n  padding: 0.75rem;\n  background-color: rgba(255, 255, 255, 0.1);\n  color: var(--text-primary);\n  border: none;\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.lyrics-toggle:hover {\n  background-color: rgba(255, 255, 255, 0.15);\n}\n\n.lyrics-content {\n  background-color: rgba(255, 255, 255, 0.05);\n  border-radius: var(--border-radius);\n  padding: 1.5rem;\n  margin-top: 1rem;\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.lyrics-content::-webkit-scrollbar {\n  width: 6px;\n}\n\n.lyrics-content::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 3px;\n}\n\n.lyrics-content::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 3px;\n}\n\n.lyrics-content::-webkit-scrollbar-thumb:hover {\n  background: rgba(255, 255, 255, 0.3);\n}\n\n.lyrics-search {\n  display: flex;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.lyrics-search input {\n  flex: 1;\n  padding: 0.75rem 1rem;\n  background-color: rgba(255, 255, 255, 0.1);\n  border: none;\n  border-radius: 8px;\n  color: var(--text-primary);\n  font-size: 0.9rem;\n}\n\n.lyrics-search input:focus {\n  outline: none;\n  background-color: rgba(255, 255, 255, 0.15);\n}\n\n.lyrics-search button {\n  padding: 0.75rem 1.5rem;\n  background: var(--primary-color);\n  color: #121212;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: background-color 0.2s;\n}\n\n.lyrics-search button:hover {\n  background: var(--primary-hover);\n}\n\n.lyrics-results-list {\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.lyrics-results-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.75rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  gap: 1rem;\n  transition: background-color 0.2s;\n}\n\n.lyrics-results-item:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.lyrics-results-info {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n  flex: 1;\n  overflow: hidden;\n}\n\n.song-title {\n  font-weight: 500;\n  color: var(--text-primary);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.artist-name {\n  font-size: 0.8rem;\n  color: var(--text-secondary);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.get-lyrics-btn {\n  padding: 0.5rem 1rem;\n  background: var(--primary-color);\n  color: #121212;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 0.8rem;\n  font-weight: 500;\n  white-space: nowrap;\n  transition: background-color 0.2s;\n}\n\n.get-lyrics-btn:hover {\n  background: var(--primary-hover);\n}\n\npre {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  color: var(--text-primary);\n  font-family: inherit;\n  line-height: 1.6;\n  font-size: 0.9rem;\n}\n\n/* YouTube Player (hidden) */\n#youtube-player {\n  position: absolute;\n  top: -9999px;\n  left: -9999px;\n}\n\n/* Responsive Design */\n@media (max-width: 900px) {\n  .player-layout {\n    flex-direction: column;\n  }\n  \n  .playlist-section {\n    width: 100%;\n    margin-top: 2rem;\n  }\n  \n  .album-art {\n    width: 250px;\n    height: 250px;\n  }\n  \n  .controls {\n    gap: 1.5rem;\n  }\n}\n\n@media (max-width: 600px) {\n  .header-content {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .search-input {\n    width: 100%;\n  }\n  \n  .album-art {\n    width: 200px;\n    height: 200px;\n  }\n  \n  .controls {\n    gap: 1rem;\n  }\n  \n  .play-btn {\n    width: 50px;\n    height: 50px;\n  }\n  \n  .action-buttons {\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n}","html":"<div class=\"player-container\">\n  <header class=\"header-section\">\n  <div class=\"header-content\">\n    <div class=\"logo-title\">\n      <span class=\"logo\">♫</span>\n      <h1>Harmony</h1>\n    </div>\n    <div class=\"search-input\">\n      <Search size={20} class=\"search-icon\" />\n      <input type=\"text\" placeholder=\"Search\" />\n    </div>\n    <button class=\"add-api-key-btn\" on:click={handleApiKeyModalClick}>\n      Add Your API Key\n    </button>\n  </div>\n</header>\n  <div class=\"player-layout\">\n  <div class=\"player-section\">\n    <div class=\"album-art\">\n      <img src={thumbnailUrl || \"/placeholder.svg\"} alt=\"Album Art\" />\n    </div>\n    \n    <div class=\"track-info\">\n      <div class=\"title\">{currentTrackInfo ? currentTrackInfo.title : 'Midnight Serenade'}</div>\n      <div class=\"artist-album\">\n        <span class=\"artist\">{currentTrackInfo ? currentTrackInfo.artist : 'Luna Beats'}</span>\n      </div>\n    </div>\n    \n    <div class=\"controls\">\n      <button class=\"control-btn\" aria-label=\"Previous\" on:click={playPreviousTrack}>\n        <SkipBack size={24} />\n      </button>\n      <button class=\"control-btn play-btn\" on:click={togglePlay} aria-label={isPlaying ? 'Pause' : 'Play'}>\n        {#if isPlaying}\n          <Pause size={30} />\n        {:else}\n          <Play size={30} />\n        {/if}\n      </button>\n      <button class=\"control-btn\" aria-label=\"Next\" on:click={playNextTrack}>\n        <SkipForward size={24} />\n      </button>\n    </div>\n    \n    <div class=\"time-progress\">\n  <div \n    class=\"progress-container\" \n    on:click={handleProgressBarClick}\n    on:keydown={handleProgressKeydown}\n    tabindex=\"0\"\n    role=\"slider\"\n    aria-label=\"Seek position in track\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n    aria-valuenow={Math.round((currentTime / duration) * 100)}\n  >\n    <div class=\"progress-bar\" style=\"width: {(currentTime / duration) * 100}%\" />\n  </div>\n  <div class=\"time-display\">\n    <span>{formatTime(currentTime)}</span>\n    <span>{formatTime(duration)}</span>\n  </div>\n  <div class=\"volume-indicator\">{volume}%</div>\n</div>\n    <div class=\"volume-control\">\n  <button class=\"volume-button\" on:click={toggleMute} aria-label=\"Toggle mute\">\n    {#if volume === 0}\n      <VolumeX size={20} />\n    {:else if volume < 50}\n      <Volume1 size={20} />\n    {:else}\n      <Volume2 size={20} />\n    {/if}\n  </button>\n  <input\n    type=\"range\"\n    min=\"0\"\n    max=\"100\"\n    bind:value={volume}\n    on:input={() => setVolume(volume)}\n    class=\"volume-slider\"\n    aria-label=\"Volume control\"\n  />\n</div>\n    \n    <div class=\"action-buttons\">\n      <button class=\"action-btn search-lyrics-btn\" on:click={toggleLyrics}>\n        Search Lyrics\n      </button>\n      <button class=\"action-btn save-playlist-btn\">\n        Save Playlist\n      </button>\n    </div>\n  </div>\n  \n  <div class=\"playlist-section\">\n    <h2>Playlist</h2>\n    <div class=\"playlist-card\">\n      <ul class=\"playlist-list\">\n        {#each playlist as track, index}\n          <li class=\"playlist-item\" class:active={currentVideoId === track.videoId}>\n            <div class=\"playlist-item-info\">\n              <button class=\"playlist-item-title\" on:click={() => playVideo(track.videoId)}>\n                {track.title}\n              </button>\n              <span class=\"track-artist\">{track.artist}</span>\n            </div>\n            <button class=\"remove-from-playlist\" on:click={() => removeFromPlaylist(index)}>\n              <Trash2 size={16} />\n            </button>\n          </li>\n        {/each}\n      </ul>\n    </div>\n    <button class=\"add-to-playlist\" on:click={handleSearchYouTubeClick}>\n      <Plus size={16} />\n    </button>\n  </div>\n</div>\n\n  {#if showSearchModal}\n    <div class=\"modal\">\n      <div class=\"modal-content\">\n        <button\n          class=\"modal-close\"\n          on:click={() => (showSearchModal = false)}\n          aria-label=\"Close search modal\"\n        >\n          <X />\n        </button>\n        <h2>Search YouTube</h2>\n        <div class=\"search-input\">\n          <input\n            type=\"text\"\n            bind:value={searchQuery}\n            placeholder=\"Search for tracks...\"\n            on:keydown={(e) => e.key === 'Enter' && searchYouTube()}\n            aria-label=\"Search for tracks\"\n          />\n          <button on:click={searchYouTube}>Search</button>\n        </div>\n        {#if isSearching}\n          <p>Searching...</p>\n        {:else if searchResults.length > 0}\n          <div class=\"search-results\">\n            {#each searchResults.slice(0, displayedResults) as result}\n              <div class=\"search-result-item\">\n                <span>{result.title}</span>\n                <span class=\"artist\">{result.artist}</span>\n                <div class=\"search-result-actions\">\n                  <button\n                    class=\"action-btn\"\n                    on:click={() => playVideo(result.videoId)}\n                    aria-label={`Play ${result.title} by ${result.artist}`}\n                  >\n                    <Play size={15} />\n                  </button>\n                  <button\n                    class=\"action-btn\"\n                    on:click={() => addToPlaylist(result)}\n                    aria-label={`Add ${result.title} to playlist`}\n                  >\n                    <List size={15} />\n                  </button>\n                </div>\n              </div>\n            {/each}\n          </div>\n          {#if searchResults.length > displayedResults}\n            <button class=\"load-more\" on:click={loadMore} aria-label=\"Load more results\">\n              Load More\n            </button>\n          {/if}\n        {:else if searchResults.length === 0 && !isSearching}\n          <p>No results found</p>\n        {/if}\n      </div>\n    </div>\n  {/if}\n\n  {#if showApiKeyModal}\n    <div class=\"modal\">\n      <div class=\"modal-content\">\n        <button\n          class=\"modal-close\"\n          on:click={() => (showApiKeyModal = false)}\n          aria-label=\"Close API key modal\"\n        >\n          <X />\n        </button>\n        <h2>YouTube API Key</h2>\n        <div class=\"api-key-input\">\n          <input\n            type=\"text\"\n            bind:value={youtubeApiKey}\n            placeholder=\"Enter your API key\"\n            aria-label=\"YouTube API Key\"\n          />\n          <button on:click={setApiKey}>Save</button>\n        </div>\n      </div>\n    </div>\n  {/if}\n  <div id=\"youtube-player\"></div>\n</div>"},"fields":[],"content":{"en":{}},"site":"192117ab-0bc1-43ad-8aac-51a7c10feb5e"},{"id":"d7ac2d81-762f-4ab8-bce4-f857ce4f02a6","name":"Site Navigation","code":{"js":"import {fade} from 'svelte/transition'\n// import Icon from '@iconify/svelte'\n\nlet mobileNavOpen = false \n\nfunction toggleMobileNav() {\n  mobileNavOpen = !mobileNavOpen\n}\n","css":".section-container {\n  /* Defined in Site CSS */\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n}\n\n.logo {\n  font-size: 1.5rem;\n  font-weight: 600;\n  line-height: 1.2;\n}\n\n.desktop-nav {\n  display: none;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n\n  nav {\n    display: flex;\n    gap: 2rem;\n\n    a.link {\n      /* Defined in Site CSS */\n      border-color: transparent;\n      transition: border-color 0.1s;\n      font-size: 0.95rem;\n\n      &:hover {\n        border-color: initial;\n      }\n    }\n  }\n\n  @media (min-width: 800px) {\n    display: flex;\n  }\n}\n\n.mobile-nav {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  font-weight: 500;\n\n  @media (min-width: 800px) {\n    display: none;\n  }\n}\n\n/* Mobile navigation popup */\n#popup {\n  font-size: 1.25rem;\n  display: grid;\n  gap: 1rem;\n  position: absolute;\n  text-align: center;\n  background-color: var(--background-color, white);\n  box-shadow: var(--box-shadow, 0px 4px 30px rgba(0, 0, 0, 0.1));\n  border-radius: var(--border-radius);\n  inset: 0.5rem;\n  bottom: initial;\n  padding: 2rem;\n  z-index: 1;\n\n  button#close {\n    position: absolute;\n    right: 1rem;\n    top: 1rem;\n  }\n}\n","html":"<header class=\"section-container\">\n  <div class=\"desktop-nav\">\n    <a href=\"/\" class=\"logo\">\n      {#if logo.title}\n        {logo.title}\n      {:else if logo.image.url}\n        <img src={logo.image.url} alt={logo.image.alt} />\n      {/if}\n    </a>\n    <nav>\n      {#each site_nav as { link }}\n        <a class=\"link\" href={link.url}>{link.label}</a>\n      {/each}\n    </nav>\n  </div>\n  <div class=\"mobile-nav\">\n    <a href=\"/\" class=\"logo\">\n      {#if logo.title}\n        {logo.title}\n      {:else if logo.image.url}\n        <img src={logo.image.url} alt={logo.image.alt} />\n      {/if}\n    </a>\n    <button\n      id=\"open\"\n      on:click={() => (mobileNavOpen = true)}\n      aria-label=\"Open mobile navigation\">\n      <!-- <Icon height=\"30\" icon=\"eva:menu-outline\" /> -->\n    </button>\n    {#if mobileNavOpen}\n      <nav id=\"popup\" transition:fade={{ duration: 200 }}>\n        {#each site_nav as { link }}\n          <a href={link.url}>{link.label}</a>\n        {/each}\n        <button\n          on:click={() => (mobileNavOpen = false)}\n          id=\"close\"\n          aria-label=\"Close Navigation\">\n          <!-- <Icon height=\"25\" icon=\"bi:x-lg\" /> -->\n        </button>\n      </nav>\n    {/if}\n  </div>\n</header>"},"fields":[{"id":"bjnyu","key":"logo","type":"group","label":"Logo","value":{"image":{"alt":"","src":"https://jbbjtodsvhsgjappwopg.supabase.co/storage/v1/object/public/sites/public-library/assets/logoipsum-261 (1).svg","url":"https://jbbjtodsvhsgjappwopg.supabase.co/storage/v1/object/public/sites/public-library/assets/logoipsum-261 (1).svg","size":3},"title":"Logo"},"fields":[{"id":"hehwn","key":"title","type":"text","label":"Title","fields":[],"options":{},"is_static":false},{"id":"ueztm","key":"image","type":"image","label":"Image","fields":[],"options":{},"is_static":false}],"options":{},"is_static":true},{"id":"qazio","key":"site_nav","type":"repeater","label":"Site Navigation","value":[{"link":{"url":"","label":"Home","active":false}},{"link":{"url":"/","label":"About"}},{"link":{"url":"/","label":"Contact"}}],"fields":[{"id":"onbxk","key":"link","type":"link","label":"Link","fields":[],"options":{},"is_static":false}],"options":{},"is_static":true}],"content":{"en":{"logo":{"image":{"alt":"","src":"https://jbbjtodsvhsgjappwopg.supabase.co/storage/v1/object/public/sites/public-library/assets/logoipsum-261 (1).svg","url":"https://jbbjtodsvhsgjappwopg.supabase.co/storage/v1/object/public/sites/public-library/assets/logoipsum-261 (1).svg","size":3},"title":"Logo"},"site_nav":[{"link":{"url":"","label":"Home","active":false}},{"link":{"url":"/","label":"About"}},{"link":{"url":"/","label":"Contact"}}]}},"site":"192117ab-0bc1-43ad-8aac-51a7c10feb5e"},{"id":"bd8c3031-5c66-4ba3-a2cc-3f543afc00e4","name":"Content","code":{"js":"","css":".content {\n  :global(img) {\n    width: 100%;\n    margin: 2rem 0;\n    box-shadow: var(--box-shadow);\n    border-radius: var(--border-radius);\n  }\n\n  :global(p) {\n    padding: 0.5rem 0;\n    line-height: 1.5;\n  }\n\n  :global(a) {\n    text-decoration: underline;\n  }\n\n  :global(h1) {\n    font-size: 2.5rem;\n    font-weight: 600;\n    line-height: 1.2;\n    margin-bottom: 0.5rem;\n  }\n\n  :global(h2) {\n    font-size: 2rem;\n    font-weight: 600;\n    margin-bottom: 0.25rem;\n    line-height: 1.2;\n  }\n\n  :global(h3) {\n    font-size: 1.5rem;\n    font-weight: 600;\n    line-height: 1.2;\n    margin-top: .5rem;\n  }\n\n  :global(ul) {\n    list-style: disc;\n    padding: 0.5rem 0;\n    padding-left: 1.25rem;\n  }\n\n  :global(ol) {\n    list-style: decimal;\n    padding: 0.5rem 0;\n    padding-left: 1.25rem;\n  }\n\n  :global(blockquote) {\n    padding: 2rem;\n    box-shadow: var(--box-shadow);\n    border-radius: var(--border-radius);\n  }\n}\n","html":"<div class=\"section\">\n  <div class=\"section-container content\">{@html content.html}</div>\n</div>\n"},"fields":[{"id":"wqxfg","key":"content","type":"markdown","label":"Content","fields":[],"options":{},"is_static":false}],"content":{"en":{"content":{"html":"<h1>Heading 1</h1><p>Welcome, feel free to delete these blocks and create your own by clicking the \"+\" button in the side panel. Click the code button in the corner of this block to change its styling.</p><h2>Heading 2</h2><p>A simple paragraph. You can use markdown in this block. <strong>Duis aute</strong> irure dolor in reprehenderit in voluptate velit esse cillum dolore <em>eu fugiat</em> nulla pariatur. Excepteur sint <strong>occaecat cupidatat</strong> non proident, sunt in culpa qui officia <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" class=\"link link link link link\" href=\"/\">deserunt mollit</a> anim id est laborum.</p><h3>Heading 3</h3><p>Enjoy :)</p>","markdown":"# Heading 1\n\nWelcome, feel free to delete these blocks and create your own by clicking the \"+\" button in the side panel. Click the code button in the corner of this block to change its styling.\n\n## Heading 2\n\nA simple paragraph. You can use markdown in this block. **Duis aute** irure dolor in reprehenderit in voluptate velit esse cillum dolore *eu fugiat* nulla pariatur. Excepteur sint **occaecat cupidatat** non proident, sunt in culpa qui officia [deserunt mollit](</>) anim id est laborum.\n\n### Heading 3\n\n"}}},"site":"192117ab-0bc1-43ad-8aac-51a7c10feb5e"},{"id":"13b02cc7-035c-4e7c-abd6-912e2d4d9f04","name":"Site Footer","code":{"js":"// import Icon from '@iconify/svelte';","css":".section-container { /* Defined in Site CSS */\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  \n  @media (min-width: 600px) {\n    flex-direction: row;\n  }\n}\n\nnav {\n  display: flex;\n  gap: 1rem;\n  font-size:.875rem;\n\n  .link { /* Defined in Site CSS */\n    border-color: transparent;\n\n    &:hover {\n      border-color: initial;\n    }\n  }\n}\n\n.primo {\n  font-weight: 600;\n  font-size: 0.75rem;\n  \n  a {\n    text-decoration: underline; \n  }\n}\n\n.social-links {\n  display: flex;\n  gap: 1.5rem;\n  font-size: 1.5rem;\n\n  a {\n    color: var(--color-accent, rebeccapurple);\n    transition: var(--transition, 0.1s transform);\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n}\n","html":"<footer class=\"section-container\">\n  <nav>\n    {#each nav as { link }}\n      <a class=\"link\" href={link.url}>{link.label}</a>\n    {/each}\n  </nav>\n  <span class=\"primo\"> <a href=\"https://primo.so\">Primo</a> Powered </span>\n  <div class=\"social-links\">\n    {#each social as { link, icon }}\n      <a href={link.url} aria-label={link.label}>\n        <!-- <Icon {icon} /> -->\n      </a>\n    {/each}\n  </div>\n</footer>"},"fields":[{"id":"pwkca","key":"nav","type":"repeater","label":"Site Navigation","value":[{"link":{"url":"https://primosites.vercel.app/theme-minimal","label":"Copyright 2023"}}],"fields":[{"id":"fayrx","key":"link","type":"link","label":"Link","fields":[],"options":{},"is_static":false}],"options":{},"is_static":true},{"id":"agfry","key":"social","type":"repeater","label":"Social Items","value":[{"icon":"mdi:twitter","link":{"url":"/","label":"Twitter"}},{"icon":"mdi:linkedin","link":{"url":"/","label":"Linkedin"}}],"fields":[{"id":"nxhuf","key":"link","type":"link","label":"Link","fields":[],"options":{},"is_static":false},{"id":"xcsnn","key":"icon","type":"text","label":"Icon","fields":[],"options":{},"is_static":false}],"options":{},"is_static":true}],"content":{"en":{"nav":[{"link":{"url":"https://primosites.vercel.app/theme-minimal","label":"Copyright 2023"}}],"social":[{"icon":"mdi:twitter","link":{"url":"/","label":"Twitter"}},{"icon":"mdi:linkedin","link":{"url":"/","label":"Linkedin"}}]}},"site":"192117ab-0bc1-43ad-8aac-51a7c10feb5e"}],"version":2}